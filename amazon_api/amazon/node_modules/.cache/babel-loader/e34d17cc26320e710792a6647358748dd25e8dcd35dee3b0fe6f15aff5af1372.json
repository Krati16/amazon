{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mixin = exports.colPositionRangeDimension = exports.rowPositionRangeDimension = exports.toStandardSpace = void 0;\nvar dirty_props_1 = require(\"../dirty-props\");\nvar WATCHED_PROP_NAMES = ['top', 'left', 'height', 'width', 'units', 'space'];\nvar toStandardSpace = function (space) {\n  if (space === 'real') {\n    return 'view';\n  }\n  return space;\n};\nexports.toStandardSpace = toStandardSpace;\nvar getTop = function (range) {\n  return range.top;\n};\nvar setTop = function (range, p) {\n  range.top = p;\n  return range;\n};\nvar getHeight = function (range) {\n  return range.height;\n};\nvar setHeight = function (range, s) {\n  range.height = s;\n  return range;\n};\nvar getLeft = function (range) {\n  return range.left;\n};\nvar setLeft = function (range, p) {\n  range.left = p;\n  return range;\n};\nvar getWidth = function (range) {\n  return range.width;\n};\nvar setWidth = function (range, s) {\n  range.width = s;\n  return range;\n};\nexports.rowPositionRangeDimension = {\n  getPosition: getTop,\n  getSize: getHeight,\n  setPosition: setTop,\n  setSize: setHeight\n};\nexports.colPositionRangeDimension = {\n  getPosition: getLeft,\n  getSize: getWidth,\n  setPosition: setLeft,\n  setSize: setWidth\n};\nfunction mixin(range, dirtyClean, parentDirtyClean, propOpts) {\n  range = range || {};\n  var rangeResult = Object.assign(range, {\n    isDirty: dirtyClean.isDirty,\n    units: 'cell',\n    space: 'data'\n  });\n  rangeResult._positionRangeDirtyClean = dirtyClean;\n  var watchedProperties = WATCHED_PROP_NAMES;\n  if (propOpts) {\n    watchedProperties = WATCHED_PROP_NAMES.map(function (propName) {\n      return {\n        name: propName,\n        onDirty: propOpts.onDirty,\n        preDirty: propOpts.preDirty\n      };\n    });\n  }\n  var dirtyCleans = [dirtyClean];\n  if (parentDirtyClean) {\n    dirtyCleans.push(parentDirtyClean);\n  }\n  dirty_props_1.default(rangeResult, watchedProperties, dirtyCleans);\n  return rangeResult;\n}\nexports.mixin = mixin;\nexports.default = mixin;","map":{"version":3,"names":["dirty_props_1","require","WATCHED_PROP_NAMES","toStandardSpace","space","exports","getTop","range","top","setTop","p","getHeight","height","setHeight","s","getLeft","left","setLeft","getWidth","width","setWidth","rowPositionRangeDimension","getPosition","getSize","setPosition","setSize","colPositionRangeDimension","mixin","dirtyClean","parentDirtyClean","propOpts","rangeResult","Object","assign","isDirty","units","_positionRangeDirtyClean","watchedProperties","map","propName","name","onDirty","preDirty","dirtyCleans","push","default"],"sources":["C:\\amazon\\amazon\\node_modules\\grid\\src\\modules\\position-range\\index.ts"],"sourcesContent":["import { IDirtyClean } from '../dirty-clean';\nimport addDirtyProps, { DirtyProp, IDirtyProp } from '../dirty-props';\n\nexport type IDirtyPropOpts = Pick<IDirtyProp, 'preDirty' | 'onDirty'>;\nconst WATCHED_PROP_NAMES = ['top', 'left', 'height', 'width', 'units', 'space'];\n\nexport type PositionUnit = 'cell' | 'px';\nexport type PositionSpace = 'data' | 'virtual' | 'real';\n\nexport const toStandardSpace = (space: PositionSpace) => {\n  if (space === 'real') {\n    return 'view';\n  }\n  return space;\n};\n\nexport interface IRawPositionRange {\n  top: number;\n  left: number;\n  height: number;\n  width: number;\n}\n\nexport type RawPositionRange = IRawPositionRange;\nexport type PartialRawPositionRange = Partial<IRawPositionRange>;\nexport type RawPositionRangeUnion = RawPositionRange | PartialRawPositionRange;\n\nexport interface IPartialPositionRange extends PartialRawPositionRange {\n  units: PositionUnit;\n  space: PositionSpace;\n  isDirty(): boolean;\n}\n\n// not the sexiest but we get the position type assuming top / left width / height are the same type\nexport type PositionType<T extends RawPositionRangeUnion> = T['top'];\nexport type SizeType<T extends RawPositionRangeUnion> = T['height'];\nexport type PositionGet = <T extends RawPositionRangeUnion>(r: T) => PositionType<T>;\nexport type PositionSet = <T extends RawPositionRangeUnion>(r: T, p: PositionType<T>) => T;\nexport type SizeGet = <T extends RawPositionRangeUnion>(r: T) => SizeType<T>;\nexport type SizeSet = <T extends RawPositionRangeUnion>(r: T, p: SizeType<T>) => T;\n\nexport interface IPositionRangeDimension {\n  getPosition: PositionGet;\n  setPosition: PositionSet;\n  getSize: SizeGet;\n  setSize: SizeSet;\n}\n\nconst getTop = <T extends RawPositionRangeUnion>(range: T) => {\n  return range.top;\n};\n\nconst setTop = <T extends RawPositionRangeUnion>(range: T, p: number) => {\n  range.top = p;\n  return range;\n};\n\nconst getHeight = <T extends RawPositionRangeUnion>(range: T) => {\n  return range.height;\n};\n\nconst setHeight = <T extends RawPositionRangeUnion>(range: T, s: number) => {\n  range.height = s;\n  return range;\n};\n\nconst getLeft = <T extends RawPositionRangeUnion>(range: T) => {\n  return range.left;\n};\nconst setLeft = <T extends RawPositionRangeUnion>(range: T, p: number) => {\n  range.left = p;\n  return range;\n};\n\nconst getWidth = <T extends RawPositionRangeUnion>(range: T) => {\n  return range.width;\n};\n\nconst setWidth = <T extends RawPositionRangeUnion>(range: T, s: number) => {\n  range.width = s;\n  return range;\n};\n\nexport const rowPositionRangeDimension: IPositionRangeDimension = {\n  getPosition: getTop,\n  getSize: getHeight,\n  setPosition: setTop,\n  setSize: setHeight,\n};\n\nexport const colPositionRangeDimension: IPositionRangeDimension = {\n  getPosition: getLeft,\n  getSize: getWidth,\n  setPosition: setLeft,\n  setSize: setWidth,\n};\n\nexport function mixin<T extends object>(\n  range: T,\n  dirtyClean: IDirtyClean,\n  parentDirtyClean?: IDirtyClean,\n  propOpts?: IDirtyPropOpts\n) {\n  range = range || {}; // allow mixin functionality\n  // tslint:disable-next-line:prefer-object-spread\n  const rangeResult: IPartialPositionRange & T = Object.assign(range, {\n    isDirty: dirtyClean.isDirty,\n    // defaults\n    units: 'cell' as 'cell',\n    space: 'data' as 'data',\n  });\n\n  (rangeResult as any)._positionRangeDirtyClean = dirtyClean;\n\n  let watchedProperties: DirtyProp[] = WATCHED_PROP_NAMES;\n  if (propOpts) {\n    watchedProperties = WATCHED_PROP_NAMES.map((propName) => {\n      return {\n        name: propName,\n        onDirty: propOpts.onDirty,\n        preDirty: propOpts.preDirty\n      };\n    });\n  }\n  const dirtyCleans = [dirtyClean];\n  if (parentDirtyClean) {\n    dirtyCleans.push(parentDirtyClean);\n  }\n\n  addDirtyProps(rangeResult, watchedProperties, dirtyCleans);\n\n  return rangeResult;\n}\n\nexport default mixin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}