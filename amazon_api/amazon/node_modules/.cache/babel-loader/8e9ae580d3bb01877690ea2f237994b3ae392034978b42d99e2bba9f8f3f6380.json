{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = void 0;\nfunction create() {\n  var listeners = [];\n  return {\n    addListener: function (fn) {\n      listeners.push(fn);\n      return function () {\n        listeners.splice(listeners.indexOf(fn), 1);\n      };\n    },\n    notify: function (e) {\n      listeners.forEach(function (listener) {\n        listener(e);\n      });\n    }\n  };\n}\nexports.create = create;\nexports.default = create;","map":{"version":3,"names":["create","listeners","addListener","fn","push","splice","indexOf","notify","e","forEach","listener","exports","default"],"sources":["C:\\amazon\\amazon\\node_modules\\grid\\src\\modules\\listeners\\index.ts"],"sourcesContent":["/*\n A simple package for creating a list of listeners that can be added to and notified\n */\n\ntype Listener = (e: any) => void;\n\nexport function create() {\n    const listeners: Listener[] = [];\n    return {\n        // returns a removal function to unbind the listener\n        addListener(fn: Listener) {\n            listeners.push(fn);\n            return () => {\n                listeners.splice(listeners.indexOf(fn), 1);\n            };\n        },\n        notify(e: any) {\n            listeners.forEach((listener) => {\n                listener(e);\n            });\n        }\n    };\n}\n\nexport default create;"],"mappings":";;;;;;AAMA,SAAgBA,MAAMA,CAAA;EAClB,IAAMC,SAAS,GAAe,EAAE;EAChC,OAAO;IAEHC,WAAW,EAAX,SAAAA,CAAYC,EAAY;MACpBF,SAAS,CAACG,IAAI,CAACD,EAAE,CAAC;MAClB,OAAO;QACHF,SAAS,CAACI,MAAM,CAACJ,SAAS,CAACK,OAAO,CAACH,EAAE,CAAC,EAAE,CAAC,CAAC;MAC9C,CAAC;IACL,CAAC;IACDI,MAAM,EAAN,SAAAA,CAAOC,CAAM;MACTP,SAAS,CAACQ,OAAO,CAAC,UAACC,QAAQ;QACvBA,QAAQ,CAACF,CAAC,CAAC;MACf,CAAC,CAAC;IACN;GACH;AACL;AAhBAG,OAAA,CAAAX,MAAA,GAAAA,MAAA;AAkBAW,OAAA,CAAAC,OAAA,GAAeZ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}