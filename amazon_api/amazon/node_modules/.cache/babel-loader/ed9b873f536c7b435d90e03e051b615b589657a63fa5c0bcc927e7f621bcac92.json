{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = void 0;\nvar dirty_clean_1 = require(\"../dirty-clean\");\nvar dirty_props_1 = require(\"../dirty-props\");\nvar position_range_1 = require(\"../position-range\");\nfunction create(grid) {\n  var dirtyClean = dirty_clean_1.default(grid);\n  var descriptors = [];\n  var cachedClassMatrix = [];\n  var api = {\n    add: function (descriptor) {\n      descriptors.push(descriptor);\n      addOrRemoveCachedClass(descriptor);\n      if (descriptor._cellClassDirtyClean) {\n        descriptor._cellClassDirtyClean.enable();\n      }\n      dirtyClean.setDirty();\n    },\n    remove: function (descriptor) {\n      var index = descriptors.indexOf(descriptor);\n      if (index !== -1) {\n        descriptors.splice(index, 1);\n        addOrRemoveCachedClass(descriptor, true);\n        if (descriptor._cellClassDirtyClean) {\n          descriptor._cellClassDirtyClean.disable();\n        }\n        dirtyClean.setDirty();\n      }\n    },\n    getAll: function () {\n      return descriptors.slice(0);\n    },\n    getCachedClasses: function (vRow, vCol) {\n      return cachedClassMatrix[vRow] && cachedClassMatrix[vRow][vCol] || [];\n    },\n    create: function (top, left, className, height, width, space) {\n      var thisDirtyClean = dirty_clean_1.default(grid);\n      var descriptor = position_range_1.default({\n        _cellClassDirtyClean: thisDirtyClean\n      }, thisDirtyClean, dirtyClean, {\n        preDirty: classPreDirty,\n        onDirty: classOnDirty\n      });\n      function classPreDirty() {\n        if (descriptor) {\n          addOrRemoveCachedClass(descriptor, true);\n        }\n      }\n      function classOnDirty() {\n        if (descriptor) {\n          addOrRemoveCachedClass(descriptor);\n        }\n      }\n      dirty_props_1.default(descriptor, [{\n        name: 'class',\n        preDirty: classPreDirty,\n        onDirty: classOnDirty\n      }], [thisDirtyClean, dirtyClean]);\n      descriptor.space = space || descriptor.space;\n      descriptor.top = top;\n      descriptor.left = left;\n      descriptor.height = height || 1;\n      descriptor.width = width || 1;\n      descriptor.class = className;\n      return descriptor;\n    },\n    isDirty: dirtyClean.isDirty\n  };\n  function regnerateCache() {\n    cachedClassMatrix = [];\n    api.getAll().forEach(function (descriptor) {\n      addOrRemoveCachedClass(descriptor);\n    });\n  }\n  grid.eventLoop.bind('grid-row-change', regnerateCache);\n  grid.eventLoop.bind('grid-col-change', regnerateCache);\n  function addOrRemoveCachedClass(descriptor, isRemove) {\n    var top = descriptor.top,\n      left = descriptor.left,\n      height = descriptor.height,\n      width = descriptor.width,\n      space = descriptor.space;\n    var className = descriptor.class;\n    if (top === undefined || height === undefined || left === undefined || width === undefined || className === undefined) {\n      return;\n    }\n    for (var r = top; r < Math.min(top + height, grid.rowModel.length(true)); r++) {\n      for (var c = left; c < Math.min(left + width, grid.colModel.length(true)); c++) {\n        var spaceKey = position_range_1.toStandardSpace(space);\n        var vRow = grid[spaceKey].row.toVirtual(r);\n        var vCol = grid[spaceKey].col.toVirtual(c);\n        var cols = cachedClassMatrix[vRow];\n        if (!cols) {\n          cols = cachedClassMatrix[vRow] = [];\n        }\n        var cellClasses = cols[vCol];\n        if (!cellClasses) {\n          if (!isRemove) {\n            cols[vCol] = [className];\n          }\n          continue;\n        }\n        if (!isRemove) {\n          if (cellClasses.indexOf(className) === -1) {\n            cellClasses.push(className);\n          }\n        } else {\n          var index = cellClasses.indexOf(className);\n          if (index !== -1) {\n            cellClasses.splice(index, 1);\n          }\n        }\n      }\n    }\n  }\n  return api;\n}\nexports.create = create;\nexports.default = create;","map":{"version":3,"names":["dirty_clean_1","require","dirty_props_1","position_range_1","create","grid","dirtyClean","default","descriptors","cachedClassMatrix","api","add","descriptor","push","addOrRemoveCachedClass","_cellClassDirtyClean","enable","setDirty","remove","index","indexOf","splice","disable","getAll","slice","getCachedClasses","vRow","vCol","top","left","className","height","width","space","thisDirtyClean","preDirty","classPreDirty","onDirty","classOnDirty","name","class","isDirty","regnerateCache","forEach","eventLoop","bind","isRemove","undefined","r","Math","min","rowModel","length","c","colModel","spaceKey","toStandardSpace","row","toVirtual","col","cols","cellClasses","exports"],"sources":["C:\\amazon\\amazon\\node_modules\\grid\\src\\modules\\cell-classes\\index.ts"],"sourcesContent":["import { Grid } from '../core';\nimport makeDirtyClean, { IDirtyClean } from '../dirty-clean';\nimport addDirtyProps from '../dirty-props';\nimport mixinPositionRange, { IPartialPositionRange, PositionSpace, toStandardSpace } from '../position-range';\n\nexport interface ICellClassDescriptor extends IPartialPositionRange {\n    _cellClassDirtyClean: IDirtyClean;\n    class?: string;\n}\n\nexport interface ICellClasses {\n    add(descriptor: ICellClassDescriptor): void;\n    remove(descriptor: ICellClassDescriptor): void;\n    getAll(): ICellClassDescriptor[];\n    getCachedClasses(vRow: number, vCol: number): string[];\n    create(\n        top?: number,\n        left?: number,\n        className?: string,\n        height?: number,\n        width?: number,\n        space?: PositionSpace\n    ): ICellClassDescriptor;\n    isDirty(): boolean;\n}\n\nexport function create(grid: Grid) {\n    const dirtyClean = makeDirtyClean(grid);\n    const descriptors: ICellClassDescriptor[] = [];\n    let cachedClassMatrix: string[][][] = [];\n\n    const api: ICellClasses = {\n        add(descriptor: ICellClassDescriptor) {\n            descriptors.push(descriptor);\n            addOrRemoveCachedClass(descriptor);\n            if (descriptor._cellClassDirtyClean) {\n                descriptor._cellClassDirtyClean.enable();\n            }\n            dirtyClean.setDirty();\n        },\n        remove(descriptor: ICellClassDescriptor) {\n            const index = descriptors.indexOf(descriptor);\n            if (index !== -1) {\n                descriptors.splice(index, 1);\n                addOrRemoveCachedClass(descriptor, true);\n                if (descriptor._cellClassDirtyClean) {\n                    descriptor._cellClassDirtyClean.disable();\n                }\n                dirtyClean.setDirty();\n            }\n        },\n        getAll(): ICellClassDescriptor[] {\n            return descriptors.slice(0);\n        },\n        getCachedClasses(vRow: number, vCol: number): string[] {\n            return cachedClassMatrix[vRow] && cachedClassMatrix[vRow][vCol] || [];\n        },\n        create(\n            top?: number,\n            left?: number,\n            className?: string,\n            height?: number,\n            width?: number,\n            space?: PositionSpace\n        ): ICellClassDescriptor {\n            const thisDirtyClean = makeDirtyClean(grid);\n            const descriptor: ICellClassDescriptor = mixinPositionRange({\n                _cellClassDirtyClean: thisDirtyClean\n            }, thisDirtyClean, dirtyClean, {\n                    preDirty: classPreDirty,\n                    onDirty: classOnDirty\n                });\n            // mixins\n\n            function classPreDirty() {\n                // check for descriptor definition because this will actually get called during position range mixin before it's defined\n                if (descriptor) {\n                    addOrRemoveCachedClass(descriptor, true);\n                }\n            }\n\n            function classOnDirty() {\n                // check for descriptor definition because this will actually get called during position range mixin before it's defined\n                if (descriptor) {\n                    addOrRemoveCachedClass(descriptor);\n                }\n            }\n\n            addDirtyProps(descriptor, [{\n                name: 'class',\n                preDirty: classPreDirty,\n                onDirty: classOnDirty\n            }], [thisDirtyClean, dirtyClean]);\n\n            // all of these are optional\n            descriptor.space = space || descriptor.space;\n            descriptor.top = top;\n            descriptor.left = left;\n            // default to single cell ranges\n            descriptor.height = height || 1;\n            descriptor.width = width || 1;\n            descriptor.class = className;\n            return descriptor;\n        },\n        isDirty: dirtyClean.isDirty\n    };\n\n    function regnerateCache() {\n        cachedClassMatrix = [];\n        api.getAll().forEach((descriptor) => {\n            addOrRemoveCachedClass(descriptor);\n        });\n    }\n\n    grid.eventLoop.bind('grid-row-change', regnerateCache);\n    grid.eventLoop.bind('grid-col-change', regnerateCache);\n\n    function addOrRemoveCachedClass(descriptor: ICellClassDescriptor, isRemove?: boolean) {\n        const { top, left, height, width, space } = descriptor;\n        const className = descriptor.class;\n        if (top === undefined || height === undefined || left === undefined || width === undefined || className === undefined) {\n            return;\n        }\n        for (let r = top; r < Math.min(top + height, grid.rowModel.length(true)); r++) {\n            for (let c = left; c < Math.min(left + width, grid.colModel.length(true)); c++) {\n                const spaceKey: keyof Grid = toStandardSpace(space);\n                const vRow = grid[spaceKey].row.toVirtual(r);\n                const vCol = grid[spaceKey].col.toVirtual(c);\n                let cols = cachedClassMatrix[vRow];\n                if (!cols) {\n                    cols = cachedClassMatrix[vRow] = [];\n                }\n                const cellClasses = cols[vCol];\n                if (!cellClasses) {\n                    if (!isRemove) {\n                        cols[vCol] = [className];\n                    }\n                    continue;\n                }\n\n                if (!isRemove) {\n                    if (cellClasses.indexOf(className) === -1) {\n                        cellClasses.push(className);\n                    }\n                } else {\n                    const index = cellClasses.indexOf(className);\n                    if (index !== -1) {\n                        cellClasses.splice(index, 1);\n                    }\n                }\n            }\n        }\n    }\n\n    return api;\n}\n\nexport default create;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}