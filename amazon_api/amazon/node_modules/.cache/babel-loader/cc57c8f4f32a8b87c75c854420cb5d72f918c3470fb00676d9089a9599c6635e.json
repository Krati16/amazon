{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = exports.isAnnotatedEvent = exports.isAnnotatedMouseOrKeyEvent = exports.isAnnotatedKeyEvent = exports.ANNOTATED_KEY_EVENTS_MAP = exports.ANNOTATED_KEY_EVENTS = exports.isAnnotatedMouseEventOfType = exports.isAnnotatedMouseEvent = exports.ANNOTATED_MOUSE_EVENTS_MAP = exports.ANNOTATED_MOUSE_EVENTS = exports.isAnnotatedGridCustomMouseEvent = exports.GRID_EVENTS = exports.EVENTS = void 0;\nvar debounce_1 = require(\"../debounce\");\nvar listeners_1 = require(\"../listeners\");\nvar mousewheel_1 = require(\"../mousewheel\");\nvar util = require(\"../util\");\nexports.EVENTS = ['click', 'mousedown', 'mouseup', 'mousemove', 'dblclick', 'keydown', 'keypress', 'keyup', 'copy', 'paste'];\nexports.GRID_EVENTS = ['grid-drag-start', 'grid-drag', 'grid-cell-drag', 'grid-drag-end', 'grid-cell-mouse-move'];\nvar GridCustomMouseEvents = {\n  'grid-drag': true,\n  'grid-cell-drag': true,\n  'grid-drag-start': true,\n  'grid-drag-end': true,\n  'grid-cell-mouse-move': true\n};\nvar isAnnotatedGridCustomMouseEvent = function (e) {\n  return !!GridCustomMouseEvents[e.type];\n};\nexports.isAnnotatedGridCustomMouseEvent = isAnnotatedGridCustomMouseEvent;\nexports.ANNOTATED_MOUSE_EVENTS = {\n  click: true,\n  dblclick: true,\n  mousedown: true,\n  mousemove: true,\n  mouseup: true\n};\nexports.ANNOTATED_MOUSE_EVENTS_MAP = exports.ANNOTATED_MOUSE_EVENTS;\nvar isAnnotatedMouseEvent = function (e) {\n  return !!exports.ANNOTATED_MOUSE_EVENTS_MAP[e.type];\n};\nexports.isAnnotatedMouseEvent = isAnnotatedMouseEvent;\nvar isAnnotatedMouseEventOfType = function (e, type) {\n  return type === e.type;\n};\nexports.isAnnotatedMouseEventOfType = isAnnotatedMouseEventOfType;\nexports.ANNOTATED_KEY_EVENTS = {\n  keydown: true,\n  keypress: true,\n  keyup: true\n};\nexports.ANNOTATED_KEY_EVENTS_MAP = exports.ANNOTATED_KEY_EVENTS;\nvar isAnnotatedKeyEvent = function (e) {\n  return !!exports.ANNOTATED_KEY_EVENTS_MAP[e.type];\n};\nexports.isAnnotatedKeyEvent = isAnnotatedKeyEvent;\nvar isAnnotatedMouseOrKeyEvent = function (e) {\n  return exports.isAnnotatedKeyEvent(e) || exports.isAnnotatedMouseEvent(e);\n};\nexports.isAnnotatedMouseOrKeyEvent = isAnnotatedMouseOrKeyEvent;\nvar isAnnotatedEvent = function (e) {\n  return exports.isAnnotatedMouseOrKeyEvent(e) || exports.isAnnotatedGridCustomMouseEvent(e);\n};\nexports.isAnnotatedEvent = isAnnotatedEvent;\nfunction create() {\n  var handlersByName = {};\n  var domUnbindFns = [];\n  var interceptors = listeners_1.default();\n  var exitListeners = listeners_1.default();\n  var unbindAll;\n  var eloop = {\n    isRunning: false,\n    destroyed: false,\n    setContainer: function (container) {\n      var unbindMouseWheelFn = mousewheel_1.default.bind(container, mainLoop);\n      exports.EVENTS.forEach(function (name) {\n        bindToDomElement(container, name, mainLoop);\n      });\n      exports.GRID_EVENTS.forEach(function (name) {\n        bindToDomElement(window, name, mainLoop);\n      });\n      unbindAll = function () {\n        unbindMouseWheelFn();\n        domUnbindFns.slice(0).forEach(function (unbind) {\n          unbind();\n        });\n        Object.keys(handlersByName).forEach(function (key) {\n          handlersByName[key] = [];\n        });\n      };\n    },\n    bind: function () {\n      var args = Array.prototype.slice.call(arguments, 0);\n      var name = args.filter(function (arg) {\n        return typeof arg === 'string';\n      })[0];\n      var handler = getHandlerFromArgs(args);\n      if (!handler || !name) {\n        throw new Error('cannot bind without at least name and function');\n      }\n      var elem = args.filter(function (arg) {\n        return util.isElement(arg) || arg === window || arg === document;\n      })[0];\n      if (!elem) {\n        handler._eventLoopIdx = getHandlers(name).push(handler) - 1;\n        handler._eventLoopUnbound = false;\n        return function () {\n          if (handler._eventLoopUnbound) {\n            return;\n          }\n          handler._eventLoopUnbound = true;\n          var handlers = getHandlers(name);\n          if (handler._eventLoopIdx != undefined) {\n            handlers[handler._eventLoopIdx] = null;\n          }\n          scheduleHandlerCleanUp();\n        };\n      } else {\n        var listener = loopWith(handler);\n        if (util.isElementWithStyle(elem)) {\n          elem.style.pointerEvents = 'auto';\n        }\n        return bindToDomElement(elem, name, listener);\n      }\n    },\n    bindOnce: function () {\n      var args = Array.prototype.slice.call(arguments, 0);\n      var handler = getHandlerFromArgs(args);\n      args.splice(args.indexOf(handler), 1, function bindOnceHandler(e) {\n        unbind();\n        handler(e);\n      });\n      var unbind = eloop.bind.apply(this, args);\n      return unbind;\n    },\n    fire: function (event) {\n      event = typeof event === 'string' ? {\n        type: event\n      } : event;\n      mainLoop(event);\n    },\n    addInterceptor: interceptors.addListener,\n    addExitListener: exitListeners.addListener,\n    stopBubbling: function (e) {\n      e.gridStopBubbling = true;\n      return e;\n    }\n  };\n  function getHandlers(name) {\n    var handlers = handlersByName[name];\n    if (!handlers) {\n      handlers = handlersByName[name] = [];\n    }\n    return handlers;\n  }\n  function bindToDomElement(elem, name, listener) {\n    elem.addEventListener(name, listener);\n    var unbindFn = function () {\n      elem.removeEventListener(name, listener);\n      domUnbindFns.splice(domUnbindFns.indexOf(unbindFn), 1);\n    };\n    domUnbindFns.push(unbindFn);\n    return unbindFn;\n  }\n  function getHandlerFromArgs(args) {\n    var handler = args.filter(function (arg) {\n      return typeof arg === 'function';\n    })[0];\n    return handler;\n  }\n  function loopWith(fn) {\n    return function (e) {\n      loop(e, fn);\n    };\n  }\n  var scheduleHandlerCleanUp = debounce_1.default(function () {\n    Object.keys(handlersByName).forEach(function (type) {\n      var i = 0;\n      var handlers = handlersByName[type];\n      if (!handlers) {\n        return;\n      }\n      handlersByName[type] = handlers.filter(function (handler) {\n        if (!!handler) {\n          handler._eventLoopIdx = i;\n          i++;\n        }\n        return !!handler;\n      });\n    });\n  }, 1);\n  var mainLoop = loopWith(function (e) {\n    getHandlers(e.type).slice(0).some(function (handler) {\n      if (!handler) {\n        return false;\n      }\n      handler(e);\n      if (e.gridStopBubbling) {\n        return true;\n      }\n      return false;\n    });\n  });\n  function loop(e, bodyFn) {\n    if (eloop.logTargets) {\n      console.log('target', e.target, 'currentTarget', e.currentTarget);\n    }\n    var isOuterLoopRunning = eloop.isRunning;\n    eloop.isRunning = true;\n    interceptors.notify(e);\n    if (!e.gridStopBubbling) {\n      bodyFn(e);\n    }\n    if (!isOuterLoopRunning) {\n      eloop.isRunning = false;\n      exitListeners.notify(e);\n    }\n  }\n  eloop.bind('grid-destroy', function () {\n    unbindAll();\n    eloop.destroyed = true;\n  });\n  return eloop;\n}\nexports.create = create;\nexports.default = create;","map":{"version":3,"names":["debounce_1","require","listeners_1","mousewheel_1","util","exports","EVENTS","GRID_EVENTS","GridCustomMouseEvents","isAnnotatedGridCustomMouseEvent","e","type","ANNOTATED_MOUSE_EVENTS","click","dblclick","mousedown","mousemove","mouseup","ANNOTATED_MOUSE_EVENTS_MAP","isAnnotatedMouseEvent","isAnnotatedMouseEventOfType","ANNOTATED_KEY_EVENTS","keydown","keypress","keyup","ANNOTATED_KEY_EVENTS_MAP","isAnnotatedKeyEvent","isAnnotatedMouseOrKeyEvent","isAnnotatedEvent","create","handlersByName","domUnbindFns","interceptors","default","exitListeners","unbindAll","eloop","isRunning","destroyed","setContainer","container","unbindMouseWheelFn","bind","mainLoop","forEach","name","bindToDomElement","window","slice","unbind","Object","keys","key","args","Array","prototype","call","arguments","filter","arg","handler","getHandlerFromArgs","Error","elem","isElement","document","_eventLoopIdx","getHandlers","push","_eventLoopUnbound","handlers","undefined","scheduleHandlerCleanUp","listener","loopWith","isElementWithStyle","style","pointerEvents","bindOnce","splice","indexOf","bindOnceHandler","apply","fire","event","addInterceptor","addListener","addExitListener","stopBubbling","gridStopBubbling","addEventListener","unbindFn","removeEventListener","fn","loop","i","some","bodyFn","logTargets","console","log","target","currentTarget","isOuterLoopRunning","notify"],"sources":["C:\\amazon\\amazon\\node_modules\\grid\\src\\modules\\event-loop\\index.ts"],"sourcesContent":["import { IRowColEvent } from '../abstract-row-col-model';\nimport debounce from '../debounce';\nimport listeners from '../listeners';\nimport mousewheel from '../mousewheel';\nimport * as util from '../util';\n\nexport const EVENTS: Array<keyof HTMLElementEventMap> =\n    ['click', 'mousedown', 'mouseup', 'mousemove', 'dblclick', 'keydown', 'keypress', 'keyup', 'copy', 'paste'];\n\nexport const GRID_EVENTS = ['grid-drag-start', 'grid-drag', 'grid-cell-drag', 'grid-drag-end', 'grid-cell-mouse-move'];\n\nexport interface IAnnotatedEvent {\n    realRow: number;\n    realCol: number;\n    virtualRow: number;\n    virtualCol: number;\n    row: number;\n    col: number;\n}\n\nexport interface IAnnotatedMouseEvent extends IAnnotatedEvent {\n    gridX: number;\n    gridY: number;\n}\n\nexport interface IGridCustomMouseEvent extends CustomEvent, IAnnotatedMouseEvent {\n    clientX: number;\n    clientY: number;\n    layerX: number;\n    layerY: number;\n    originalEvent: AnnotatedMouseEventUnion;\n}\n\nexport interface IGridDragStartEvent extends IGridCustomMouseEvent {\n    enableAutoScroll(): void;\n}\n\n// tslint:disable-next-line:interface-over-type-literal\nexport type GridCustomMouseEventMap = {\n    'grid-drag': IGridCustomMouseEvent,\n    'grid-cell-drag': IGridCustomMouseEvent,\n    'grid-drag-start': IGridDragStartEvent,\n    'grid-drag-end': IGridCustomMouseEvent,\n    'grid-cell-mouse-move': IGridCustomMouseEvent,\n};\n\nconst GridCustomMouseEvents: { [key: string]: boolean | undefined } = {\n    'grid-drag': true,\n    'grid-cell-drag': true,\n    'grid-drag-start': true,\n    'grid-drag-end': true,\n    'grid-cell-mouse-move': true,\n};\n\nexport type GridCustomMouseEventTypes = keyof GridCustomMouseEventMap;\n\n// tslint:disable-next-line:interface-over-type-literal\nexport type GridCustomEventMap = GridCustomMouseEventMap & {\n    'grid-row-change': IRowColEvent,\n    'grid-col-change': IRowColEvent,\n};\n\nexport const isAnnotatedGridCustomMouseEvent = (e: EventUnion): e is AnnotatedGridCustomMouseEventUnion => !!GridCustomMouseEvents[e.type];\n\nexport const ANNOTATED_MOUSE_EVENTS = {\n    click: true,\n    dblclick: true,\n    mousedown: true,\n    mousemove: true,\n    mouseup: true,\n};\nexport const ANNOTATED_MOUSE_EVENTS_MAP: { readonly [key: string]: boolean | undefined; } = ANNOTATED_MOUSE_EVENTS;\nexport const isAnnotatedMouseEvent = (e: EventUnion): e is AnnotatedMouseEventUnion => !!ANNOTATED_MOUSE_EVENTS_MAP[e.type];\nexport const isAnnotatedMouseEventOfType =\n    <T extends keyof typeof ANNOTATED_MOUSE_EVENTS>(e: EventUnion, type: T): e is AnnotatedHTMLElementMouseEventMap[T] =>\n        type === e.type;\n\nexport const ANNOTATED_KEY_EVENTS = {\n    keydown: true,\n    keypress: true,\n    keyup: true,\n};\nexport const ANNOTATED_KEY_EVENTS_MAP: { readonly [key: string]: boolean | undefined; } = ANNOTATED_KEY_EVENTS;\nexport const isAnnotatedKeyEvent = (e: EventUnion): e is AnnotatedKeyEventUnion => !!ANNOTATED_KEY_EVENTS_MAP[e.type];\n\nexport const isAnnotatedMouseOrKeyEvent = (e: EventUnion): e is AnnotatedMouseOrKeyEventUnion =>\n    isAnnotatedKeyEvent(e) ||\n    isAnnotatedMouseEvent(e);\nexport const isAnnotatedEvent = (e: EventUnion): e is AnnotatedEventUnion =>\n    isAnnotatedMouseOrKeyEvent(e) ||\n    isAnnotatedGridCustomMouseEvent(e);\n\nexport type AnnotatedHTMLElementKeyEventMap = {\n    [K in keyof typeof ANNOTATED_KEY_EVENTS]: IAnnotatedEvent & HTMLElementEventMap[K];\n};\n\nexport type AnnotatedHTMLElementMouseEventMap = {\n    [K in keyof typeof ANNOTATED_MOUSE_EVENTS]: IAnnotatedMouseEvent & HTMLElementEventMap[K];\n};\n\nexport type AnnotatedHTMLElementEventMap = AnnotatedHTMLElementKeyEventMap & AnnotatedHTMLElementMouseEventMap;\nexport type AnnotatedGridCustomMouseEventUnion = GridCustomMouseEventMap[keyof GridCustomMouseEventMap];\nexport type AnnotatedMouseEventUnion = AnnotatedHTMLElementMouseEventMap[keyof AnnotatedHTMLElementMouseEventMap];\nexport type AnnotatedKeyEventUnion = AnnotatedHTMLElementKeyEventMap[keyof AnnotatedHTMLElementKeyEventMap];\nexport type AnnotatedMouseOrKeyEventUnion = AnnotatedMouseEventUnion | AnnotatedKeyEventUnion;\nexport type AnnotatedEventUnion = AnnotatedMouseOrKeyEventUnion | AnnotatedGridCustomMouseEventUnion;\n\nexport type AnnotatedWindowKeyEventMap = {\n    [K in keyof typeof ANNOTATED_KEY_EVENTS]: IAnnotatedEvent & WindowEventMap[K];\n};\n\nexport type AnnotatedWindowMouseEventMap = {\n    [K in keyof typeof ANNOTATED_MOUSE_EVENTS]: IAnnotatedMouseEvent & WindowEventMap[K];\n};\n\nexport type AnnotatedWindowEventMap = AnnotatedWindowKeyEventMap & AnnotatedWindowMouseEventMap;\n\nexport type AnnotatedDocumentKeyEventMap = {\n    [K in keyof typeof ANNOTATED_KEY_EVENTS]: IAnnotatedEvent & DocumentEventMap[K];\n};\n\nexport type AnnotatedDocumentMouseEventMap = {\n    [K in keyof typeof ANNOTATED_MOUSE_EVENTS]: IAnnotatedMouseEvent & DocumentEventMap[K];\n};\n\nexport type AnnotatedDocumentEventMap = AnnotatedDocumentKeyEventMap & AnnotatedDocumentMouseEventMap;\n\nexport type AllEventMap = AnnotatedHTMLElementEventMap & HTMLElementEventMap & WindowEventMap & DocumentEventMap & GridCustomEventMap;\nexport type EventUnion = AllEventMap[keyof AllEventMap] | (ILoopEvent & { target?: undefined; });\n\nexport type WindowEventHandler<K extends keyof WindowEventMap> = (ev: WindowEventMap[K]) => any;\nexport type DocumentEventHandler<K extends keyof DocumentEventMap> = (ev: DocumentEventMap[K]) => any;\nexport type HTMLElementEventHandler<K extends keyof HTMLElementEventMap> = (ev: HTMLElementEventMap[K]) => any;\nexport type AnnotatedWindowEventHandler<K extends keyof AnnotatedWindowEventMap> = (ev: AnnotatedWindowEventMap[K]) => any;\nexport type AnnotatedDocumentEventHandler<K extends keyof AnnotatedDocumentEventMap> = (ev: AnnotatedDocumentEventMap[K]) => any;\nexport type AnnotatedHTMLElementEventHandler<K extends keyof AnnotatedHTMLElementEventMap> = (ev: AnnotatedHTMLElementEventMap[K]) => any;\nexport type GridCustomEventHandler<K extends keyof GridCustomEventMap> = (ev: GridCustomEventMap[K]) => any;\nexport type LoopEventHandler = (ev: ILoopEvent) => any;\nexport type EventUnionHandler = (ev: EventUnion) => any;\n\nexport interface ILoopEvent {\n    type: string;\n    gridStopBubbling?: boolean;\n}\n\nexport interface IEventHandler extends LoopEventHandler {\n    _eventLoopIdx?: number;\n    _eventLoopUnbound?: boolean;\n}\n\nexport type EventHandlerUnbinder = () => void;\nexport type BindTarget = HTMLElement | Window | Document;\n\nexport interface IBind {\n    bind<K extends keyof AnnotatedWindowEventMap>(\n        elem: Window,\n        name: K,\n        handler: AnnotatedWindowEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof AnnotatedDocumentEventMap>(\n        elem: Document,\n        name: K,\n        handler: AnnotatedDocumentEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof AnnotatedHTMLElementEventMap>(\n        elem: HTMLElement,\n        name: K,\n        handler: AnnotatedHTMLElementEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof AnnotatedHTMLElementEventMap>(\n        name: K,\n        handler: AnnotatedHTMLElementEventHandler<K>\n    ): EventHandlerUnbinder;\n\n    bind<K extends keyof GridCustomEventMap>(\n        elem: BindTarget,\n        name: K,\n        handler: GridCustomEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof GridCustomEventMap>(\n        name: K,\n        handler: GridCustomEventHandler<K>\n    ): EventHandlerUnbinder;\n\n    bind<K extends keyof WindowEventMap>(\n        elem: Window,\n        name: K,\n        handler: WindowEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof DocumentEventMap>(\n        elem: Document,\n        name: K,\n        handler: DocumentEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof HTMLElementEventMap>(\n        elem: HTMLElement,\n        name: K,\n        handler: HTMLElementEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind<K extends keyof HTMLElementEventMap>(\n        name: K,\n        handler: HTMLElementEventHandler<K>\n    ): EventHandlerUnbinder;\n    bind(name: string, handler: IEventHandler): EventHandlerUnbinder;\n}\n\n// tslint:disable-next-line:interface-over-type-literal\nexport type BindOnce<T> = {\n    bindOnce: T[keyof T];\n};\n\nexport interface IEventLoop extends IBind {\n    isRunning: boolean;\n    destroyed: boolean;\n    logTargets?: boolean;\n    setContainer(c: HTMLElement): void;\n    fire(event: string | ILoopEvent): void;\n    addInterceptor(h: EventUnionHandler): EventHandlerUnbinder;\n    addExitListener(h: EventUnionHandler): EventHandlerUnbinder;\n    stopBubbling(e: ILoopEvent): ILoopEvent;\n}\nexport type EventLoop = IEventLoop & BindOnce<IBind>;\n\nexport function create() {\n    const handlersByName: { [key: string]: Array<IEventHandler | null> | undefined } = {};\n    const domUnbindFns: EventHandlerUnbinder[] = [];\n    const interceptors = listeners();\n    const exitListeners = listeners();\n\n    let unbindAll: () => void;\n\n    const eloop: EventLoop = {\n        isRunning: false,\n        destroyed: false,\n        setContainer(container: HTMLElement) {\n            const unbindMouseWheelFn = mousewheel.bind(container, mainLoop);\n\n            EVENTS.forEach((name) => {\n                bindToDomElement(container, name, mainLoop);\n            });\n\n            GRID_EVENTS.forEach((name) => {\n                bindToDomElement(window, name, mainLoop);\n            });\n\n            unbindAll = () => {\n                unbindMouseWheelFn();\n\n                // have to copy the array since the unbind will actually remove itself from the array which modifies it mid iteration\n                domUnbindFns.slice(0).forEach((unbind) => {\n                    unbind();\n                });\n\n                Object.keys(handlersByName).forEach((key) => {\n                    handlersByName[key] = [];\n                });\n            };\n        },\n        // tslint:disable-next-line:only-arrow-functions object-literal-shorthand\n        bind: function () {\n            const args: any[] = Array.prototype.slice.call(arguments, 0);\n            const name: string = args.filter((arg) => {\n                return typeof arg === 'string';\n            })[0];\n            const handler = getHandlerFromArgs(args);\n            if (!handler || !name) {\n                throw new Error('cannot bind without at least name and function');\n            }\n\n            const elem: BindTarget = args.filter((arg) => {\n                return util.isElement(arg) || arg === window || arg === document;\n            })[0];\n\n            if (!elem) {\n\n                handler._eventLoopIdx = getHandlers(name).push(handler) - 1;\n                handler._eventLoopUnbound = false;\n                return () => {\n                    if (handler._eventLoopUnbound) {\n                        return;\n                    }\n                    handler._eventLoopUnbound = true;\n                    const handlers = getHandlers(name);\n                    if (handler._eventLoopIdx != undefined) {\n                        handlers[handler._eventLoopIdx] = null;\n                    }\n                    // release the memory but do the expensive work later all at once\n                    scheduleHandlerCleanUp();\n                };\n            } else {\n                const listener = loopWith(handler);\n                // make sure the elem can receive events\n                if (util.isElementWithStyle(elem)) {\n                    elem.style.pointerEvents = 'auto';\n                }\n                return bindToDomElement(elem, name, listener);\n            }\n        },\n        // tslint:disable-next-line:only-arrow-functions object-literal-shorthand\n        bindOnce: function (this: any) {\n            const args = Array.prototype.slice.call(arguments, 0);\n            const handler = getHandlerFromArgs(args);\n            args.splice(args.indexOf(handler), 1, function bindOnceHandler(e: ILoopEvent) {\n                unbind();\n                handler(e);\n            });\n            const unbind = eloop.bind.apply(this, args);\n            return unbind;\n        },\n        fire: (event) => {\n            event = typeof event === 'string' ? {\n                type: event\n            } : event;\n            mainLoop(event);\n        },\n        addInterceptor: interceptors.addListener,\n        addExitListener: exitListeners.addListener,\n        stopBubbling(e: ILoopEvent) {\n            e.gridStopBubbling = true;\n            return e;\n        }\n    };\n\n    function getHandlers(name: string) {\n        let handlers = handlersByName[name];\n        if (!handlers) {\n            handlers = handlersByName[name] = [];\n        }\n        return handlers;\n    }\n\n    function bindToDomElement(elem: BindTarget, name: string, listener: EventListener) {\n        elem.addEventListener(name, listener);\n        const unbindFn = () => {\n            elem.removeEventListener(name, listener);\n            domUnbindFns.splice(domUnbindFns.indexOf(unbindFn), 1);\n        };\n        domUnbindFns.push(unbindFn);\n        return unbindFn;\n    }\n\n    function getHandlerFromArgs(args: any[]) {\n        const handler: IEventHandler = args.filter((arg) => {\n            return typeof arg === 'function';\n        })[0];\n        return handler;\n    }\n\n    function loopWith(fn: (e: ILoopEvent) => void) {\n        return (e: ILoopEvent) => {\n            loop(e, fn);\n        };\n    }\n\n    const scheduleHandlerCleanUp = debounce(() => {\n        Object.keys(handlersByName).forEach((type) => {\n            let i = 0;\n            const handlers = handlersByName[type];\n            if (!handlers) {\n                return;\n            }\n            handlersByName[type] = handlers.filter((handler) => {\n                if (!!handler) {\n                    handler._eventLoopIdx = i;\n                    i++;\n                }\n                return !!handler;\n            });\n        });\n    }, 1);\n\n    const mainLoop = loopWith((e) => {\n        // have to copy the array because handlers can unbind themselves which modifies the array\n        // we use some so that we can break out of the loop if need be\n        getHandlers(e.type).slice(0).some((handler) => {\n            if (!handler) {\n                return false;\n            }\n            handler(e);\n            if (e.gridStopBubbling) {\n                return true;\n            }\n            return false;\n        });\n    });\n\n    function loop(e: ILoopEvent, bodyFn: (e: ILoopEvent) => void) {\n        if (eloop.logTargets) {\n            console.log('target', (e as any).target, 'currentTarget', (e as any).currentTarget);\n        }\n        const isOuterLoopRunning = eloop.isRunning;\n        eloop.isRunning = true;\n        interceptors.notify(e);\n        if (!e.gridStopBubbling) {\n            bodyFn(e);\n        }\n\n        if (!isOuterLoopRunning) {\n            eloop.isRunning = false;\n            exitListeners.notify(e);\n        }\n    }\n\n    eloop.bind('grid-destroy', () => {\n        unbindAll();\n        eloop.destroyed = true;\n    });\n\n    return eloop;\n}\n\nexport default create;"],"mappings":";;;;;;AACA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,IAAA,GAAAH,OAAA;AAEaI,OAAA,CAAAC,MAAM,GACf,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC;AAElGD,OAAA,CAAAE,WAAW,GAAG,CAAC,iBAAiB,EAAE,WAAW,EAAE,gBAAgB,EAAE,eAAe,EAAE,sBAAsB,CAAC;AAqCtH,IAAMC,qBAAqB,GAA2C;EAClE,WAAW,EAAE,IAAI;EACjB,gBAAgB,EAAE,IAAI;EACtB,iBAAiB,EAAE,IAAI;EACvB,eAAe,EAAE,IAAI;EACrB,sBAAsB,EAAE;CAC3B;AAUM,IAAMC,+BAA+B,GAAG,SAAAA,CAACC,CAAa;EAA8C,QAAC,CAACF,qBAAqB,CAACE,CAAC,CAACC,IAAI,CAAC;AAA/B,CAA+B;AAA7HN,OAAA,CAAAI,+BAA+B,GAAAA,+BAAA;AAE/BJ,OAAA,CAAAO,sBAAsB,GAAG;EAClCC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,SAAS,EAAE,IAAI;EACfC,OAAO,EAAE;CACZ;AACYZ,OAAA,CAAAa,0BAA0B,GAAqDb,OAAA,CAAAO,sBAAsB;AAC3G,IAAMO,qBAAqB,GAAG,SAAAA,CAACT,CAAa;EAAoC,QAAC,CAACL,OAAA,CAAAa,0BAA0B,CAACR,CAAC,CAACC,IAAI,CAAC;AAApC,CAAoC;AAA9GN,OAAA,CAAAc,qBAAqB,GAAAA,qBAAA;AAC3B,IAAMC,2BAA2B,GACpC,SAAAA,CAAgDV,CAAa,EAAEC,IAAO;EAClE,OAAAA,IAAI,KAAKD,CAAC,CAACC,IAAI;AAAf,CAAe;AAFVN,OAAA,CAAAe,2BAA2B,GAAAA,2BAAA;AAI3Bf,OAAA,CAAAgB,oBAAoB,GAAG;EAChCC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;CACV;AACYnB,OAAA,CAAAoB,wBAAwB,GAAqDpB,OAAA,CAAAgB,oBAAoB;AACvG,IAAMK,mBAAmB,GAAG,SAAAA,CAAChB,CAAa;EAAkC,QAAC,CAACL,OAAA,CAAAoB,wBAAwB,CAACf,CAAC,CAACC,IAAI,CAAC;AAAlC,CAAkC;AAAxGN,OAAA,CAAAqB,mBAAmB,GAAAA,mBAAA;AAEzB,IAAMC,0BAA0B,GAAG,SAAAA,CAACjB,CAAa;EACpD,OAAAL,OAAA,CAAAqB,mBAAmB,CAAChB,CAAC,CAAC,IACtBL,OAAA,CAAAc,qBAAqB,CAACT,CAAC,CAAC;AADxB,CACwB;AAFfL,OAAA,CAAAsB,0BAA0B,GAAAA,0BAAA;AAGhC,IAAMC,gBAAgB,GAAG,SAAAA,CAAClB,CAAa;EAC1C,OAAAL,OAAA,CAAAsB,0BAA0B,CAACjB,CAAC,CAAC,IAC7BL,OAAA,CAAAI,+BAA+B,CAACC,CAAC,CAAC;AADlC,CACkC;AAFzBL,OAAA,CAAAuB,gBAAgB,GAAAA,gBAAA;AAuI7B,SAAgBC,MAAMA,CAAA;EAClB,IAAMC,cAAc,GAA+D,EAAE;EACrF,IAAMC,YAAY,GAA2B,EAAE;EAC/C,IAAMC,YAAY,GAAG9B,WAAA,CAAA+B,OAAS,EAAE;EAChC,IAAMC,aAAa,GAAGhC,WAAA,CAAA+B,OAAS,EAAE;EAEjC,IAAIE,SAAqB;EAEzB,IAAMC,KAAK,GAAc;IACrBC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAZ,SAAAA,CAAaC,SAAsB;MAC/B,IAAMC,kBAAkB,GAAGtC,YAAA,CAAA8B,OAAU,CAACS,IAAI,CAACF,SAAS,EAAEG,QAAQ,CAAC;MAE/DtC,OAAA,CAAAC,MAAM,CAACsC,OAAO,CAAC,UAACC,IAAI;QAChBC,gBAAgB,CAACN,SAAS,EAAEK,IAAI,EAAEF,QAAQ,CAAC;MAC/C,CAAC,CAAC;MAEFtC,OAAA,CAAAE,WAAW,CAACqC,OAAO,CAAC,UAACC,IAAI;QACrBC,gBAAgB,CAACC,MAAM,EAAEF,IAAI,EAAEF,QAAQ,CAAC;MAC5C,CAAC,CAAC;MAEFR,SAAS,GAAG,SAAAA,CAAA;QACRM,kBAAkB,EAAE;QAGpBV,YAAY,CAACiB,KAAK,CAAC,CAAC,CAAC,CAACJ,OAAO,CAAC,UAACK,MAAM;UACjCA,MAAM,EAAE;QACZ,CAAC,CAAC;QAEFC,MAAM,CAACC,IAAI,CAACrB,cAAc,CAAC,CAACc,OAAO,CAAC,UAACQ,GAAG;UACpCtB,cAAc,CAACsB,GAAG,CAAC,GAAG,EAAE;QAC5B,CAAC,CAAC;MACN,CAAC;IACL,CAAC;IAEDV,IAAI,EAAE,SAAAA,CAAA;MACF,IAAMW,IAAI,GAAUC,KAAK,CAACC,SAAS,CAACP,KAAK,CAACQ,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;MAC5D,IAAMZ,IAAI,GAAWQ,IAAI,CAACK,MAAM,CAAC,UAACC,GAAG;QACjC,OAAO,OAAOA,GAAG,KAAK,QAAQ;MAClC,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,IAAMC,OAAO,GAAGC,kBAAkB,CAACR,IAAI,CAAC;MACxC,IAAI,CAACO,OAAO,IAAI,CAACf,IAAI,EAAE;QACnB,MAAM,IAAIiB,KAAK,CAAC,gDAAgD,CAAC;;MAGrE,IAAMC,IAAI,GAAeV,IAAI,CAACK,MAAM,CAAC,UAACC,GAAG;QACrC,OAAOvD,IAAI,CAAC4D,SAAS,CAACL,GAAG,CAAC,IAAIA,GAAG,KAAKZ,MAAM,IAAIY,GAAG,KAAKM,QAAQ;MACpE,CAAC,CAAC,CAAC,CAAC,CAAC;MAEL,IAAI,CAACF,IAAI,EAAE;QAEPH,OAAO,CAACM,aAAa,GAAGC,WAAW,CAACtB,IAAI,CAAC,CAACuB,IAAI,CAACR,OAAO,CAAC,GAAG,CAAC;QAC3DA,OAAO,CAACS,iBAAiB,GAAG,KAAK;QACjC,OAAO;UACH,IAAIT,OAAO,CAACS,iBAAiB,EAAE;YAC3B;;UAEJT,OAAO,CAACS,iBAAiB,GAAG,IAAI;UAChC,IAAMC,QAAQ,GAAGH,WAAW,CAACtB,IAAI,CAAC;UAClC,IAAIe,OAAO,CAACM,aAAa,IAAIK,SAAS,EAAE;YACpCD,QAAQ,CAACV,OAAO,CAACM,aAAa,CAAC,GAAG,IAAI;;UAG1CM,sBAAsB,EAAE;QAC5B,CAAC;OACJ,MAAM;QACH,IAAMC,QAAQ,GAAGC,QAAQ,CAACd,OAAO,CAAC;QAElC,IAAIxD,IAAI,CAACuE,kBAAkB,CAACZ,IAAI,CAAC,EAAE;UAC/BA,IAAI,CAACa,KAAK,CAACC,aAAa,GAAG,MAAM;;QAErC,OAAO/B,gBAAgB,CAACiB,IAAI,EAAElB,IAAI,EAAE4B,QAAQ,CAAC;;IAErD,CAAC;IAEDK,QAAQ,EAAE,SAAAA,CAAA;MACN,IAAMzB,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACP,KAAK,CAACQ,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;MACrD,IAAMG,OAAO,GAAGC,kBAAkB,CAACR,IAAI,CAAC;MACxCA,IAAI,CAAC0B,MAAM,CAAC1B,IAAI,CAAC2B,OAAO,CAACpB,OAAO,CAAC,EAAE,CAAC,EAAE,SAASqB,eAAeA,CAACvE,CAAa;QACxEuC,MAAM,EAAE;QACRW,OAAO,CAAClD,CAAC,CAAC;MACd,CAAC,CAAC;MACF,IAAMuC,MAAM,GAAGb,KAAK,CAACM,IAAI,CAACwC,KAAK,CAAC,IAAI,EAAE7B,IAAI,CAAC;MAC3C,OAAOJ,MAAM;IACjB,CAAC;IACDkC,IAAI,EAAE,SAAAA,CAACC,KAAK;MACRA,KAAK,GAAG,OAAOA,KAAK,KAAK,QAAQ,GAAG;QAChCzE,IAAI,EAAEyE;OACT,GAAGA,KAAK;MACTzC,QAAQ,CAACyC,KAAK,CAAC;IACnB,CAAC;IACDC,cAAc,EAAErD,YAAY,CAACsD,WAAW;IACxCC,eAAe,EAAErD,aAAa,CAACoD,WAAW;IAC1CE,YAAY,EAAZ,SAAAA,CAAa9E,CAAa;MACtBA,CAAC,CAAC+E,gBAAgB,GAAG,IAAI;MACzB,OAAO/E,CAAC;IACZ;GACH;EAED,SAASyD,WAAWA,CAACtB,IAAY;IAC7B,IAAIyB,QAAQ,GAAGxC,cAAc,CAACe,IAAI,CAAC;IACnC,IAAI,CAACyB,QAAQ,EAAE;MACXA,QAAQ,GAAGxC,cAAc,CAACe,IAAI,CAAC,GAAG,EAAE;;IAExC,OAAOyB,QAAQ;EACnB;EAEA,SAASxB,gBAAgBA,CAACiB,IAAgB,EAAElB,IAAY,EAAE4B,QAAuB;IAC7EV,IAAI,CAAC2B,gBAAgB,CAAC7C,IAAI,EAAE4B,QAAQ,CAAC;IACrC,IAAMkB,QAAQ,GAAG,SAAAA,CAAA;MACb5B,IAAI,CAAC6B,mBAAmB,CAAC/C,IAAI,EAAE4B,QAAQ,CAAC;MACxC1C,YAAY,CAACgD,MAAM,CAAChD,YAAY,CAACiD,OAAO,CAACW,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD5D,YAAY,CAACqC,IAAI,CAACuB,QAAQ,CAAC;IAC3B,OAAOA,QAAQ;EACnB;EAEA,SAAS9B,kBAAkBA,CAACR,IAAW;IACnC,IAAMO,OAAO,GAAkBP,IAAI,CAACK,MAAM,CAAC,UAACC,GAAG;MAC3C,OAAO,OAAOA,GAAG,KAAK,UAAU;IACpC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,OAAOC,OAAO;EAClB;EAEA,SAASc,QAAQA,CAACmB,EAA2B;IACzC,OAAO,UAACnF,CAAa;MACjBoF,IAAI,CAACpF,CAAC,EAAEmF,EAAE,CAAC;IACf,CAAC;EACL;EAEA,IAAMrB,sBAAsB,GAAGxE,UAAA,CAAAiC,OAAQ,CAAC;IACpCiB,MAAM,CAACC,IAAI,CAACrB,cAAc,CAAC,CAACc,OAAO,CAAC,UAACjC,IAAI;MACrC,IAAIoF,CAAC,GAAG,CAAC;MACT,IAAMzB,QAAQ,GAAGxC,cAAc,CAACnB,IAAI,CAAC;MACrC,IAAI,CAAC2D,QAAQ,EAAE;QACX;;MAEJxC,cAAc,CAACnB,IAAI,CAAC,GAAG2D,QAAQ,CAACZ,MAAM,CAAC,UAACE,OAAO;QAC3C,IAAI,CAAC,CAACA,OAAO,EAAE;UACXA,OAAO,CAACM,aAAa,GAAG6B,CAAC;UACzBA,CAAC,EAAE;;QAEP,OAAO,CAAC,CAACnC,OAAO;MACpB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,CAAC,CAAC;EAEL,IAAMjB,QAAQ,GAAG+B,QAAQ,CAAC,UAAChE,CAAC;IAGxByD,WAAW,CAACzD,CAAC,CAACC,IAAI,CAAC,CAACqC,KAAK,CAAC,CAAC,CAAC,CAACgD,IAAI,CAAC,UAACpC,OAAO;MACtC,IAAI,CAACA,OAAO,EAAE;QACV,OAAO,KAAK;;MAEhBA,OAAO,CAAClD,CAAC,CAAC;MACV,IAAIA,CAAC,CAAC+E,gBAAgB,EAAE;QACpB,OAAO,IAAI;;MAEf,OAAO,KAAK;IAChB,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,SAASK,IAAIA,CAACpF,CAAa,EAAEuF,MAA+B;IACxD,IAAI7D,KAAK,CAAC8D,UAAU,EAAE;MAClBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAG1F,CAAS,CAAC2F,MAAM,EAAE,eAAe,EAAG3F,CAAS,CAAC4F,aAAa,CAAC;;IAEvF,IAAMC,kBAAkB,GAAGnE,KAAK,CAACC,SAAS;IAC1CD,KAAK,CAACC,SAAS,GAAG,IAAI;IACtBL,YAAY,CAACwE,MAAM,CAAC9F,CAAC,CAAC;IACtB,IAAI,CAACA,CAAC,CAAC+E,gBAAgB,EAAE;MACrBQ,MAAM,CAACvF,CAAC,CAAC;;IAGb,IAAI,CAAC6F,kBAAkB,EAAE;MACrBnE,KAAK,CAACC,SAAS,GAAG,KAAK;MACvBH,aAAa,CAACsE,MAAM,CAAC9F,CAAC,CAAC;;EAE/B;EAEA0B,KAAK,CAACM,IAAI,CAAC,cAAc,EAAE;IACvBP,SAAS,EAAE;IACXC,KAAK,CAACE,SAAS,GAAG,IAAI;EAC1B,CAAC,CAAC;EAEF,OAAOF,KAAK;AAChB;AA1LA/B,OAAA,CAAAwB,MAAA,GAAAA,MAAA;AA4LAxB,OAAA,CAAA4B,OAAA,GAAeJ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}