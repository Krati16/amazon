{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ViewSpaceConverter = void 0;\nvar converter_1 = require(\"./converter\");\nvar dimensional_converter_1 = require(\"./dimensional-converter\");\nvar ViewSpaceConverter = function (_super) {\n  __extends(ViewSpaceConverter, _super);\n  function ViewSpaceConverter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.row = new DimensionalViewSpaceConverter(_this.grid.rows);\n    _this.col = new DimensionalViewSpaceConverter(_this.grid.cols);\n    return _this;\n  }\n  return ViewSpaceConverter;\n}(converter_1.AbstractSpaceConverter);\nexports.ViewSpaceConverter = ViewSpaceConverter;\nvar DimensionalViewSpaceConverter = function (_super) {\n  __extends(DimensionalViewSpaceConverter, _super);\n  function DimensionalViewSpaceConverter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  DimensionalViewSpaceConverter.prototype.toView = function (i) {\n    return i;\n  };\n  DimensionalViewSpaceConverter.prototype.toData = function (viewCol) {\n    return this.gridDimension.converters.virtual.toData(this.toVirtual(viewCol));\n  };\n  DimensionalViewSpaceConverter.prototype.toVirtual = function (viewCol) {\n    return this.gridDimension.viewPort.toVirtual(viewCol);\n  };\n  DimensionalViewSpaceConverter.prototype.count = function () {\n    return this.gridDimension.viewPort.count;\n  };\n  return DimensionalViewSpaceConverter;\n}(dimensional_converter_1.AbstractDimensionalSpaceConverter);","map":{"version":3,"names":["converter_1","require","dimensional_converter_1","ViewSpaceConverter","_super","__extends","_this","apply","arguments","row","DimensionalViewSpaceConverter","grid","rows","col","cols","AbstractSpaceConverter","exports","prototype","toView","i","toData","viewCol","gridDimension","converters","virtual","toVirtual","viewPort","count","AbstractDimensionalSpaceConverter"],"sources":["C:\\amazon\\amazon\\node_modules\\grid\\src\\modules\\space\\view-space-converter.ts"],"sourcesContent":["\nimport { IColDescriptor, IRowDescriptor } from '../abstract-row-col-model';\nimport { AbstractSpaceConverter } from './converter';\nimport { AbstractDimensionalSpaceConverter } from './dimensional-converter';\n\nexport class ViewSpaceConverter extends AbstractSpaceConverter {\n  row: AbstractDimensionalSpaceConverter<IRowDescriptor> = new DimensionalViewSpaceConverter(this.grid.rows);\n  col: AbstractDimensionalSpaceConverter<IColDescriptor> = new DimensionalViewSpaceConverter(this.grid.cols);\n}\n\nclass DimensionalViewSpaceConverter<T extends IRowDescriptor | IColDescriptor> extends AbstractDimensionalSpaceConverter<T> {\n  toView(i: number) {\n    return i;\n  }\n  toData(viewCol: number) {\n    return this.gridDimension.converters.virtual.toData(this.toVirtual(viewCol));\n  }\n  toVirtual(viewCol: number) {\n    return this.gridDimension.viewPort.toVirtual(viewCol);\n  }\n  count() {\n    return this.gridDimension.viewPort.count;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,uBAAA,GAAAD,OAAA;AAEA,IAAAE,kBAAA,aAAAC,MAAA;EAAwCC,SAAA,CAAAF,kBAAA,EAAAC,MAAA;EAAxC,SAAAD,mBAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IACEF,KAAA,CAAAG,GAAG,GAAsD,IAAIC,6BAA6B,CAACJ,KAAI,CAACK,IAAI,CAACC,IAAI,CAAC;IAC1GN,KAAA,CAAAO,GAAG,GAAsD,IAAIH,6BAA6B,CAACJ,KAAI,CAACK,IAAI,CAACG,IAAI,CAAC;;EAC5G;EAAA,OAAAX,kBAAC;AAAD,CAAC,CAHuCH,WAAA,CAAAe,sBAAsB;AAAjDC,OAAA,CAAAb,kBAAA,GAAAA,kBAAA;AAKb,IAAAO,6BAAA,aAAAN,MAAA;EAAuFC,SAAA,CAAAK,6BAAA,EAAAN,MAAA;EAAvF,SAAAM,8BAAA;;EAaA;EAZEA,6BAAA,CAAAO,SAAA,CAAAC,MAAM,GAAN,UAAOC,CAAS;IACd,OAAOA,CAAC;EACV,CAAC;EACDT,6BAAA,CAAAO,SAAA,CAAAG,MAAM,GAAN,UAAOC,OAAe;IACpB,OAAO,IAAI,CAACC,aAAa,CAACC,UAAU,CAACC,OAAO,CAACJ,MAAM,CAAC,IAAI,CAACK,SAAS,CAACJ,OAAO,CAAC,CAAC;EAC9E,CAAC;EACDX,6BAAA,CAAAO,SAAA,CAAAQ,SAAS,GAAT,UAAUJ,OAAe;IACvB,OAAO,IAAI,CAACC,aAAa,CAACI,QAAQ,CAACD,SAAS,CAACJ,OAAO,CAAC;EACvD,CAAC;EACDX,6BAAA,CAAAO,SAAA,CAAAU,KAAK,GAAL;IACE,OAAO,IAAI,CAACL,aAAa,CAACI,QAAQ,CAACC,KAAK;EAC1C,CAAC;EACH,OAAAjB,6BAAC;AAAD,CAAC,CAbsFR,uBAAA,CAAA0B,iCAAiC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}