{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.equal = exports.getArgs = exports.iterate = exports.createFromPoints = exports.union = exports.intersect = void 0;\nfunction intersect(range1, range2) {\n  var range2Start = range2[0];\n  var range1Start = range1[0];\n  var range1End = range1Start + range1[1] - 1;\n  var range2End = range2Start + range2[1] - 1;\n  if (range2Start > range1End || range2End < range1Start) {\n    return null;\n  }\n  var resultStart = range1Start > range2Start ? range1Start : range2Start;\n  var resultEnd = range1End < range2End ? range1End : range2End;\n  return [resultStart, resultEnd - resultStart + 1];\n}\nexports.intersect = intersect;\nfunction union(range1, range2) {\n  if (!range1) {\n    return range2;\n  }\n  if (!range2) {\n    return range1;\n  }\n  var range2Start = range2[0];\n  var range2End = range2Start + range2[1] - 1;\n  var range1Start = range1[0];\n  var range1End = range1Start + range1[1] - 1;\n  var resultStart = range1Start < range2Start ? range1Start : range2Start;\n  return [resultStart, (range1End > range2End ? range1End : range2End) - resultStart + 1];\n}\nexports.union = union;\nfunction createFromPoints(r1, c1, r2, c2) {\n  var range = {};\n  if (r1 < r2) {\n    range.top = r1;\n    range.height = r2 - r1 + 1;\n  } else {\n    range.top = r2;\n    range.height = r1 - r2 + 1;\n  }\n  if (c1 < c2) {\n    range.left = c1;\n    range.width = c2 - c1 + 1;\n  } else {\n    range.left = c2;\n    range.width = c1 - c2 + 1;\n  }\n  return range;\n}\nexports.createFromPoints = createFromPoints;\nfunction iterate() {\n  var args = this.getArgs(arguments);\n  var range = args.range;\n  var cellFn = args.cellFn;\n  var rowFn = args.rowFn;\n  for (var r = range.top; r < range.top + range.height; r++) {\n    var rowResult = void 0;\n    if (rowFn) {\n      rowResult = rowFn(r);\n    }\n    for (var c = range.left; c < range.left + range.width; c++) {\n      if (cellFn) {\n        cellFn(r, c, rowResult);\n      }\n    }\n  }\n}\nexports.iterate = iterate;\nfunction getArgs(args) {\n  var range = args[0];\n  var cellFn = args[1];\n  var rowFn;\n  if (args.length === 3) {\n    cellFn = args[2];\n    rowFn = args[1];\n  }\n  return {\n    range: range,\n    cellFn: cellFn,\n    rowFn: rowFn\n  };\n}\nexports.getArgs = getArgs;\nfunction equal(r1, r2) {\n  return r1.top === r2.top && r1.left === r2.left && r1.width === r2.width && r1.height === r2.height;\n}\nexports.equal = equal;","map":{"version":3,"names":["intersect","range1","range2","range2Start","range1Start","range1End","range2End","resultStart","resultEnd","exports","union","createFromPoints","r1","c1","r2","c2","range","top","height","left","width","iterate","args","getArgs","arguments","cellFn","rowFn","r","rowResult","c","length","equal"],"sources":["C:\\amazon\\amazon\\node_modules\\grid\\src\\modules\\range-util\\index.ts"],"sourcesContent":["import { IRawPositionRange } from '../position-range';\n\n// takes a point and a length as the ranges in array form\nexport function intersect(range1: number[], range2: number[]) {\n    const range2Start = range2[0];\n    const range1Start = range1[0];\n    const range1End = range1Start + range1[1] - 1;\n    const range2End = range2Start + range2[1] - 1;\n    if (range2Start > range1End || range2End < range1Start) {\n        return null;\n    }\n    const resultStart = (range1Start > range2Start ? range1Start : range2Start);\n    const resultEnd = (range1End < range2End ? range1End : range2End);\n    return [\n        resultStart,\n        resultEnd - resultStart + 1\n    ];\n}\n// takes a point and a length as the ranges in array form\nexport function union(range1: number[] | null, range2: number[] | null) {\n    if (!range1) {\n        return range2;\n    }\n    if (!range2) {\n        return range1;\n    }\n    const range2Start = range2[0];\n    const range2End = range2Start + range2[1] - 1;\n    const range1Start = range1[0];\n    const range1End = range1Start + range1[1] - 1;\n    const resultStart = (range1Start < range2Start ? range1Start : range2Start);\n    return [\n        resultStart, (range1End > range2End ? range1End : range2End) - resultStart + 1\n    ];\n}\n\n// takes two row, col points and creates a normal position range\nexport function createFromPoints(r1: number, c1: number, r2: number, c2: number) {\n    const range: IRawPositionRange = {} as any;\n    if (r1 < r2) {\n        range.top = r1;\n        range.height = r2 - r1 + 1;\n    } else {\n        range.top = r2;\n        range.height = r1 - r2 + 1;\n    }\n\n    if (c1 < c2) {\n        range.left = c1;\n        range.width = c2 - c1 + 1;\n    } else {\n        range.left = c2;\n        range.width = c1 - c2 + 1;\n    }\n    return range;\n}\nexport function iterate(this: { getArgs: typeof getArgs }) {\n    const args = this.getArgs(arguments);\n    const range = args.range;\n    const cellFn = args.cellFn;\n    const rowFn = args.rowFn;\n    for (let r = range.top; r < range.top + range.height; r++) {\n        let rowResult;\n        if (rowFn) {\n            rowResult = rowFn(r);\n        }\n        for (let c = range.left; c < range.left + range.width; c++) {\n            if (cellFn) {\n                cellFn(r, c, rowResult);\n            }\n        }\n    }\n}\n\nexport type CellFn<T> = (r: number, c: number, result?: T) => (boolean | void);\nexport type RowFn<T> = (r: number) => T;\nexport function getArgs<T>(args: IArguments) {\n    const range: IRawPositionRange = args[0];\n    let cellFn: CellFn<T> = args[1];\n    let rowFn: RowFn<T> | undefined;\n    if (args.length === 3) {\n        cellFn = args[2];\n        rowFn = args[1];\n    }\n    return {\n        range,\n        cellFn,\n        rowFn\n    };\n}\nexport function equal(r1: IRawPositionRange, r2: IRawPositionRange) {\n    return r1.top === r2.top &&\n        r1.left === r2.left &&\n        r1.width === r2.width &&\n        r1.height === r2.height;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}