{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = void 0;\nvar custom_event_1 = require(\"../custom-event\");\nvar event_loop_1 = require(\"../event-loop\");\nvar util = require(\"../util\");\nfunction create(grid) {\n  var container;\n  var root;\n  var cellContainerTL;\n  var cellContainerTR;\n  var cellContainerBL;\n  var cellContainerBR;\n  var decoratorContainerTL;\n  var decoratorContainerTR;\n  var decoratorContainerBL;\n  var decoratorContainerBR;\n  var borderWidth;\n  var hoveredFixedRow;\n  var hoveredRow;\n  var GRID_CELL_CONTAINER_BASE_CLASS = 'grid-cells';\n  var GRID_VIEW_ROOT_CLASS = 'js-grid-view-root';\n  var CELL_CLASS = 'grid-cell';\n  var cells;\n  var rows = {\n    fixed: [],\n    nonFixed: []\n  };\n  var builtCols = {};\n  var builtRows = {};\n  var drawRequestedId;\n  var viewLayer = {\n    build: function (elem) {\n      cleanup();\n      container = elem;\n      cellContainerTL = makeCellContainer();\n      cellContainerTL.style.zIndex = '4';\n      cellContainerTR = makeCellContainer();\n      cellContainerTR.style.zIndex = '3';\n      cellContainerBL = makeCellContainer();\n      cellContainerBL.style.zIndex = '3';\n      cellContainerBR = makeCellContainer();\n      cellContainerBR.style.zIndex = '2';\n      decoratorContainerTL = makeDecoratorContainer();\n      decoratorContainerTL.style.zIndex = '4';\n      decoratorContainerTR = makeDecoratorContainer();\n      decoratorContainerTR.style.zIndex = '3';\n      decoratorContainerTR.style.overflow = 'hidden';\n      decoratorContainerBL = makeDecoratorContainer();\n      decoratorContainerBL.style.zIndex = '3';\n      decoratorContainerBL.style.overflow = 'hidden';\n      decoratorContainerBR = makeDecoratorContainer();\n      decoratorContainerBR.style.zIndex = '2';\n      root = document.createElement('div');\n      root.setAttribute('class', GRID_VIEW_ROOT_CLASS);\n      root.appendChild(cellContainerTL);\n      root.appendChild(cellContainerTR);\n      root.appendChild(cellContainerBL);\n      root.appendChild(cellContainerBR);\n      root.appendChild(decoratorContainerTL);\n      root.appendChild(decoratorContainerTR);\n      root.appendChild(decoratorContainerBL);\n      root.appendChild(decoratorContainerBR);\n      container.appendChild(root);\n    },\n    draw: function () {\n      if (drawRequestedId === undefined) {\n        drawRequestedId = requestAnimationFrame(draw);\n      }\n    },\n    eventIsOnCells: function (e) {\n      var target = e.target;\n      if (!target) {\n        return false;\n      }\n      if (targetIsElement(target) && target.classList.contains('grid-cell') || target === grid.textarea) {\n        return true;\n      }\n      if (!event_loop_1.isAnnotatedEvent(e)) {\n        return false;\n      }\n      var renderedColElement = builtCols && builtCols[e.realCol];\n      var renderedRowElement = builtRows && builtRows[e.realRow];\n      if (renderedColElement && !grid.view.col.get(e.realCol).isBuiltActionable) {\n        var elem = renderedColElement[e.realRow];\n        return isTargetInElem(target, elem);\n      } else if (renderedRowElement && !grid.view.row.get(e.realRow).isBuiltActionable) {\n        var elem = renderedRowElement[e.realCol];\n        return isTargetInElem(target, elem);\n      }\n      return false;\n    },\n    setTextContent: function (elem, text) {\n      if (!elem) {\n        return;\n      }\n      if (elem.firstChild && elem.firstChild.nodeType === 3) {\n        elem.firstChild.nodeValue = text;\n      } else {\n        elem.textContent = text;\n      }\n    },\n    getBorderWidth: getBorderWidth,\n    _drawCells: drawCells,\n    _buildCells: buildCells,\n    _buildCols: buildCols,\n    _buildRows: buildRows,\n    _drawDecorators: drawDecorators,\n    _drawCellClasses: drawCellClasses\n  };\n  var targetIsElement = function (e) {\n    return !!e.classList;\n  };\n  grid.cellClasses.add(grid.cellClasses.create(0, 0, CELL_CLASS, Infinity, Infinity, 'virtual'));\n  var rowHeaderClasses = grid.cellClasses.create(0, 0, 'grid-header grid-row-header', Infinity, 0, 'virtual');\n  var colHeaderClasses = grid.cellClasses.create(0, 0, 'grid-header grid-col-header', 0, Infinity, 'virtual');\n  var fixedColClasses = grid.cellClasses.create(0, -1, 'grid-last-fixed-col', Infinity, 1, 'virtual');\n  var fixedRowClasses = grid.cellClasses.create(-1, 0, 'grid-last-fixed-row', 1, Infinity, 'virtual');\n  grid.cellClasses.add(rowHeaderClasses);\n  grid.cellClasses.add(colHeaderClasses);\n  grid.cellClasses.add(fixedRowClasses);\n  grid.cellClasses.add(fixedColClasses);\n  grid.eventLoop.bind('grid-col-change', function () {\n    fixedColClasses.left = grid.colModel.numFixed() - 1;\n    rowHeaderClasses.width = grid.colModel.numHeaders();\n  });\n  grid.eventLoop.bind('grid-row-change', function () {\n    fixedRowClasses.top = grid.rowModel.numFixed() - 1;\n    colHeaderClasses.height = grid.rowModel.numHeaders();\n  });\n  grid.eventLoop.bind('grid-cell-mouse-move', function (e) {\n    var row = rows.fixed[e.realRow];\n    if (!row || !viewLayer.eventIsOnCells(e)) {\n      return;\n    }\n    row.classList.add('hover');\n    if (hoveredFixedRow && hoveredFixedRow !== row) {\n      hoveredFixedRow.classList.remove('hover');\n    }\n    hoveredFixedRow = row;\n    row = rows.nonFixed[e.realRow];\n    if (row) {\n      row.classList.add('hover');\n    }\n    if (hoveredRow && hoveredRow !== row) {\n      hoveredRow.classList.remove('hover');\n    }\n    hoveredRow = row;\n  });\n  function makeCellContainer() {\n    var cellContainer = document.createElement('div');\n    cellContainer.setAttribute('dts', 'grid-cells');\n    cellContainer.setAttribute('class', GRID_CELL_CONTAINER_BASE_CLASS);\n    cellContainer.style.zIndex = '';\n    return cellContainer;\n  }\n  function makeDecoratorContainer() {\n    var decoratorContainer = document.createElement('div');\n    decoratorContainer.setAttribute('dts', 'grid-decorators');\n    util.position(decoratorContainer, 0, 0, 0, 0);\n    decoratorContainer.style.zIndex = '';\n    decoratorContainer.style.pointerEvents = 'none';\n    return decoratorContainer;\n  }\n  function offsetContainerForPixelScroll() {\n    var modTopPixels = grid.pixelScrollModel.offsetTop;\n    var modLeftPixels = grid.pixelScrollModel.offsetLeft;\n    var fixedHeight = grid.virtualPixelCellModel.fixedHeight();\n    var fixedWidth = grid.virtualPixelCellModel.fixedWidth();\n    util.position(cellContainerTL, 0, 0, undefined, undefined, fixedHeight, fixedWidth);\n    util.position(cellContainerBR, 0, 0, 0, 0);\n    util.position3D(cellContainerBR, modTopPixels, modLeftPixels);\n    util.position(cellContainerTR, 0, 0, undefined, 0, fixedHeight);\n    util.position3D(cellContainerTR, 0, modLeftPixels);\n    util.position(cellContainerBL, 0, 0, 0, undefined, undefined, fixedWidth);\n    util.position3D(cellContainerBL, modTopPixels, 0);\n    util.position(decoratorContainerTL, 0, 0, undefined, undefined, fixedHeight, fixedWidth);\n    util.position(decoratorContainerBR, 0, 0, 0, 0);\n    util.position3D(decoratorContainerBR, modTopPixels, modLeftPixels);\n    util.position(decoratorContainerTR, 0, fixedWidth, undefined, 0, undefined, undefined);\n    util.position3D(decoratorContainerTR, 0, 0);\n    util.position(decoratorContainerBL, fixedHeight, 0, 0, undefined, undefined, undefined);\n    util.position3D(decoratorContainerBL, 0, 0);\n    grid.decorators.getAlive().forEach(function (decorator) {\n      var decoratorTopOffset = 0;\n      var decoratorLeftOffset = 0;\n      if (decorator.scrollVert && !decorator.scrollHorz) {\n        decoratorTopOffset = fixedHeight - modTopPixels;\n      } else if (decorator.scrollHorz && !decorator.scrollVert) {\n        decoratorLeftOffset = fixedWidth - modLeftPixels;\n      }\n      if (decorator.fixed) {\n        if (decorator.scrollVert) {\n          decoratorTopOffset += modTopPixels;\n        }\n        if (decorator.scrollHorz) {\n          decoratorLeftOffset += modLeftPixels;\n        }\n      }\n      if (decorator.boundingBox) {\n        decorator.boundingBox.style.marginTop = -1 * decoratorTopOffset + 'px';\n        decorator.boundingBox.style.marginLeft = -1 * decoratorLeftOffset + 'px';\n      }\n    });\n  }\n  function measureBorderWidth() {\n    if (borderWidth) {\n      return;\n    }\n    var jsGridCell = cells[0] && cells[0][0];\n    if (jsGridCell) {\n      var oldClass = jsGridCell.className;\n      jsGridCell.className = CELL_CLASS;\n      var computedStyle = getComputedStyle(jsGridCell);\n      var borderWidthProp = computedStyle.getPropertyValue('border-left-width');\n      borderWidth = parseInt(borderWidthProp, 10);\n      jsGridCell.className = oldClass;\n    }\n    borderWidth = !borderWidth || isNaN(borderWidth) ? undefined : borderWidth;\n    return borderWidth;\n  }\n  function draw() {\n    drawRequestedId = undefined;\n    if (!container || grid.destroyed) {\n      return;\n    }\n    if (!grid.opts.snapToCell && grid.fps.slowCount > 10) {\n      grid.opts.snapToCell = true;\n    }\n    var rebuilt = grid.viewPort.isDirty();\n    if (rebuilt) {\n      viewLayer._buildCells();\n    }\n    var builtColsDirty = grid.colModel.areBuildersDirty();\n    if (rebuilt || builtColsDirty) {\n      viewLayer._buildCols();\n    }\n    var builtRowsDirty = grid.rowModel.areBuildersDirty();\n    if (rebuilt || builtRowsDirty) {\n      viewLayer._buildRows();\n    }\n    var cellsPositionOrSizeChanged = grid.colModel.isDirty() || grid.rowModel.isDirty() || grid.cellScrollModel.isDirty();\n    if (grid.cellClasses.isDirty() || rebuilt || cellsPositionOrSizeChanged) {\n      viewLayer._drawCellClasses();\n    }\n    var drawingCells = rebuilt || cellsPositionOrSizeChanged || builtColsDirty || builtRowsDirty || grid.dataModel.isDirty();\n    if (drawingCells) {\n      viewLayer._drawCells();\n    }\n    var drawingDecorators = grid.decorators.isDirty() || rebuilt || cellsPositionOrSizeChanged;\n    if (drawingDecorators) {\n      viewLayer._drawDecorators(cellsPositionOrSizeChanged || rebuilt);\n    }\n    if (grid.pixelScrollModel.isOffsetDirty() || drawingDecorators) {\n      offsetContainerForPixelScroll();\n    }\n    grid.eventLoop.fire('grid-draw');\n  }\n  function getBorderWidth() {\n    return borderWidth || 1;\n  }\n  function drawCells() {\n    measureBorderWidth();\n    var bWidth = getBorderWidth();\n    var headerRows = grid.rowModel.numHeaders();\n    var headerCols = grid.colModel.numHeaders();\n    var totalVisibleCellWidth = 0;\n    var lastVirtualCol;\n    var lastVirtualRow;\n    var widths = [];\n    var lefts = [];\n    var virtualCols = [];\n    function positionRow(row, height, top, virtualRow) {\n      if (!row) {\n        return;\n      }\n      if (height === 0 || lastVirtualRow === virtualRow) {\n        row.style.display = 'none';\n        return;\n      }\n      row.style.display = '';\n      row.style.height = height + bWidth + 'px';\n      row.style.top = top + 'px';\n    }\n    grid.viewPort.iterateCells(function drawCell(r, c) {\n      var cell = cells[r][c];\n      var width = widths[c] || (widths[c] = grid.viewPort.getColWidth(c));\n      var virtualCol = virtualCols[c] || (virtualCols[c] = grid.viewPort.toVirtualCol(c));\n      if (width === 0 || virtualCol === lastVirtualCol) {\n        cell.style.display = 'none';\n        return;\n      }\n      if (r === 0) {\n        totalVisibleCellWidth += width;\n      }\n      lastVirtualCol = virtualCol;\n      cell.style.display = '';\n      cell.style.width = width + bWidth + 'px';\n      var left = lefts[c] || (lefts[c] = grid.viewPort.getColLeft(c));\n      cell.style.left = left + 'px';\n      var virtualRow = grid.viewPort.toVirtualRow(r);\n      var data = r < headerRows || c < headerCols ? grid.dataModel.getHeader(virtualRow, virtualCol) : grid.dataModel.get(grid.rowModel.toData(virtualRow), grid.colModel.toData(virtualCol));\n      var builder = grid.rowModel.get(virtualRow).builder;\n      var hasRowBuilder = true;\n      if (!builder || virtualCol < headerCols && !builder.includeHeaders) {\n        hasRowBuilder = false;\n        builder = grid.colModel.get(virtualCol).builder;\n        if (builder && virtualRow < headerRows && !builder.includeHeaders) {\n          builder = undefined;\n        }\n      }\n      var cellChild;\n      if (builder) {\n        var builtElem = hasRowBuilder ? builtRows[virtualRow][c] : builtCols[virtualCol][r];\n        cellChild = builder.update(builtElem, {\n          virtualCol: virtualCol,\n          virtualRow: virtualRow,\n          data: data\n        });\n      }\n      if (!cellChild) {\n        viewLayer.setTextContent(cell, data.formatted);\n      } else {\n        var notSameElem = cell.firstChild !== cellChild;\n        if (cell.firstChild && notSameElem) {\n          cell.removeChild(cell.firstChild);\n        }\n        if (notSameElem) {\n          cell.appendChild(cellChild);\n        }\n      }\n    }, function drawRow(r) {\n      var height = grid.viewPort.getRowHeight(r);\n      var virtualRow = grid.view.row.toVirtual(r);\n      var top = grid.viewPort.getRowTop(r);\n      positionRow(rows.fixed[r], height, top, virtualRow);\n      positionRow(rows.nonFixed[r], height, top, virtualRow);\n      lastVirtualRow = virtualRow;\n      lastVirtualCol = undefined;\n    });\n    rows.nonFixed.forEach(function (row) {\n      row.style.width = totalVisibleCellWidth + 'px';\n    });\n    rows.fixed.forEach(function (row) {\n      row.style.width = grid.virtualPixelCellModel.fixedWidth() + 'px';\n    });\n    if (grid.cellScrollModel.row % 2) {\n      cellContainerBR.className = GRID_CELL_CONTAINER_BASE_CLASS + ' odds';\n      cellContainerBL.className = GRID_CELL_CONTAINER_BASE_CLASS + ' odds';\n    } else {\n      doToAllCellContainers(function (cellContainer) {\n        cellContainer.className = GRID_CELL_CONTAINER_BASE_CLASS;\n      });\n    }\n  }\n  function clearCellContainer(cellContainer) {\n    while (cellContainer.firstChild) {\n      cellContainer.removeChild(cellContainer.firstChild);\n    }\n  }\n  function doToAllCellContainers(fn) {\n    fn(cellContainerTL);\n    fn(cellContainerTR);\n    fn(cellContainerBL);\n    fn(cellContainerBR);\n  }\n  function getCellContainer(r, c) {\n    var fixedRow = r < grid.rowModel.numFixed();\n    var fixedCol = c < grid.colModel.numFixed();\n    if (fixedRow && fixedCol) {\n      return cellContainerTL;\n    } else if (fixedRow) {\n      return cellContainerTR;\n    } else if (fixedCol) {\n      return cellContainerBL;\n    }\n    return cellContainerBR;\n  }\n  function buildRow(r) {\n    var row = document.createElement('div');\n    row.setAttribute('class', 'grid-row');\n    row.setAttribute('dts', 'grid-row');\n    row.style.position = 'absolute';\n    row.style.left = '0';\n    if (r < grid.rowModel.numHeaders()) {\n      row.classList.add('grid-is-header');\n    }\n    return row;\n  }\n  function buildCells() {\n    doToAllCellContainers(clearCellContainer);\n    cells = [];\n    rows.fixed = [];\n    rows.nonFixed = [];\n    var row;\n    grid.viewPort.iterateCells(function (r, c) {\n      if (c === 0) {\n        cells[r] = [];\n      }\n      if (c === grid.colModel.numFixed()) {\n        row = rows.nonFixed[r] = buildRow(r);\n      } else if (c === 0) {\n        row = rows.fixed[r] = buildRow(r);\n      }\n      var cell = buildDivCell();\n      cells[r][c] = cell;\n      row.appendChild(cell);\n      getCellContainer(r, c).appendChild(row);\n    });\n  }\n  function buildDivCell() {\n    var cell = document.createElement('div');\n    cell.setAttribute('dts', 'grid-cell');\n    var style = cell.style;\n    style.position = 'absolute';\n    style.boxSizing = 'border-box';\n    style.top = '0px';\n    style.bottom = '0px';\n    return cell;\n  }\n  function destroyRenderedElems(oldElems) {\n    if (!oldElems) {\n      return;\n    }\n    oldElems.forEach(function (oldElem) {\n      if (!oldElem) {\n        return;\n      }\n      var destroyEvent = custom_event_1.default('grid-rendered-elem-destroy', true);\n      oldElem.dispatchEvent(destroyEvent);\n    });\n  }\n  function buildCols() {\n    builtCols = buildDimension(grid.cols, grid.rows, builtCols, function (viewCol, viewRow, previousElement) {\n      return {\n        viewRow: viewRow,\n        viewCol: viewCol,\n        previousElement: previousElement\n      };\n    });\n  }\n  function buildRows() {\n    builtRows = buildDimension(grid.rows, grid.cols, builtRows, function (viewRow, viewCol, previousElement) {\n      return {\n        viewRow: viewRow,\n        viewCol: viewCol,\n        previousElement: previousElement\n      };\n    });\n  }\n  function buildDimension(dimension, crossDimension, previouslyBuiltElems, getRenderContext) {\n    var builtElems = {};\n    for (var i = 0; i < dimension.rowColModel.length(true); i++) {\n      var builder = dimension.rowColModel.get(i).builder;\n      var oldElems = previouslyBuiltElems && previouslyBuiltElems[i];\n      if (builder) {\n        builtElems[i] = [];\n        destroyRenderedElems(oldElems);\n        for (var realI = 0; realI < crossDimension.viewPort.count; realI++) {\n          builtElems[i][realI] = builder.render(getRenderContext(dimension.converters.virtual.toView(i), realI, oldElems && oldElems[realI]));\n        }\n      }\n    }\n    return builtElems;\n  }\n  function setPosition(boundingBox, top, left, height, width) {\n    var style = boundingBox.style;\n    if (height <= 0 || width <= 0) {\n      style.display = 'none';\n      return false;\n    }\n    style.display = '';\n    style.top = top + 'px';\n    style.left = left + 'px';\n    style.height = height + 'px';\n    style.width = width + 'px';\n    style.position = 'absolute';\n  }\n  function positionDecorator(bounding, t, l, h, w) {\n    return setPosition(bounding, t, l, util.clamp(h, 0, grid.viewPort.height), util.clamp(w, 0, grid.viewPort.width));\n  }\n  function positionCellDecoratorFromViewCellRange(realCellRange, boundingBox) {\n    var realPxRange = grid.viewPort.toPx(realCellRange);\n    return positionDecorator(boundingBox, realPxRange.top, realPxRange.left, realPxRange.height && realPxRange.height + getBorderWidth(), realPxRange.width && realPxRange.width + getBorderWidth());\n  }\n  function createRangeForDescriptor(descriptor) {\n    var range = {\n      top: descriptor.top,\n      left: descriptor.left,\n      height: descriptor.height,\n      width: descriptor.width\n    };\n    if (descriptor.space === 'data' && descriptor.units === 'cell') {\n      range.top += grid.rowModel.numHeaders();\n      range.left += grid.colModel.numHeaders();\n    }\n    return range;\n  }\n  function drawDecorators(cellsPositionOrSizeChanged) {\n    var aliveDecorators = grid.decorators.getAlive();\n    aliveDecorators.forEach(function (decorator) {\n      var hasBeenRendered = !!decorator.boundingBox;\n      var boundingBox = decorator.boundingBox || document.createElement('div');\n      if (!hasBeenRendered) {\n        boundingBox.style.pointerEvents = 'none';\n        decorator.boundingBox = boundingBox;\n        var decElement = decorator.render();\n        if (decElement) {\n          boundingBox.appendChild(decElement);\n        }\n      }\n      if (decorator.isDirty() || cellsPositionOrSizeChanged || !hasBeenRendered) {\n        var vCol = decorator.left;\n        var vRow = decorator.top;\n        if (decorator.space === 'real') {\n          vCol = grid.view.col.toVirtual(vCol);\n          vRow = grid.view.row.toVirtual(vRow);\n          switch (decorator.units) {\n            case 'px':\n              positionDecorator(boundingBox, decorator.top, decorator.left, decorator.height, decorator.width);\n              break;\n            case 'cell':\n              positionCellDecoratorFromViewCellRange(decorator, boundingBox);\n              break;\n          }\n        } else if (decorator.space === 'virtual' || decorator.space === 'data') {\n          if (decorator.space === 'data') {\n            vCol = grid.data.col.toVirtual(vCol);\n            vRow = grid.data.row.toVirtual(vRow);\n          }\n          switch (decorator.units) {\n            case 'px':\n              break;\n            case 'cell':\n            default:\n              var range = createRangeForDescriptor(decorator);\n              var realCellRange = grid.viewPort.intersect(range);\n              if (realCellRange) {\n                positionCellDecoratorFromViewCellRange(realCellRange, boundingBox);\n              } else {\n                positionDecorator(boundingBox, -1, -1, -1, -1);\n              }\n              break;\n          }\n        }\n        var parent_1 = boundingBox.parentElement;\n        if (parent_1) {\n          parent_1.removeChild(boundingBox);\n        }\n        var fixedRow = vRow < grid.rowModel.numFixed();\n        var fixedCol = vCol < grid.colModel.numFixed();\n        if (fixedRow && fixedCol) {\n          decorator.scrollHorz = false;\n          decorator.scrollVert = false;\n          decoratorContainerTL.appendChild(boundingBox);\n        } else if (fixedRow) {\n          decorator.scrollHorz = true;\n          decorator.scrollVert = false;\n          decoratorContainerTR.appendChild(boundingBox);\n        } else if (fixedCol) {\n          decorator.scrollHorz = false;\n          decorator.scrollVert = true;\n          decoratorContainerBL.appendChild(boundingBox);\n        } else {\n          decorator.scrollHorz = true;\n          decorator.scrollVert = true;\n          decoratorContainerBR.appendChild(boundingBox);\n        }\n      }\n    });\n    removeDecorators(grid.decorators.popAllDead());\n  }\n  function removeDecorators(decorators) {\n    decorators.forEach(function (decorator) {\n      if (!decorator) {\n        return;\n      }\n      var boundingBox = decorator.boundingBox;\n      if (boundingBox) {\n        var renderedElement = boundingBox.firstChild;\n        if (renderedElement) {\n          var destroyEvent = custom_event_1.default('decorator-destroy', true);\n          renderedElement.dispatchEvent(destroyEvent);\n        }\n        var parent_2 = boundingBox.parentElement;\n        if (parent_2) {\n          parent_2.removeChild(boundingBox);\n        }\n        decorator.boundingBox = undefined;\n      }\n    });\n  }\n  function drawCellClasses() {\n    grid.viewPort.iterateCells(function (r, c) {\n      var classes = grid.cellClasses.getCachedClasses(grid.view.row.toVirtual(r), grid.view.col.toVirtual(c));\n      cells[r][c].className = classes.join(' ');\n    });\n  }\n  function destroyPreviouslyBuilt(built) {\n    if (!built) {\n      return;\n    }\n    Object.keys(built).forEach(function (key) {\n      destroyRenderedElems(built[key]);\n    });\n  }\n  function cleanup() {\n    removeDecorators(grid.decorators.getAlive().concat(grid.decorators.popAllDead()));\n    destroyPreviouslyBuilt(builtCols);\n    destroyPreviouslyBuilt(builtRows);\n    if (!container) {\n      return;\n    }\n    var gridViewRoots = container.querySelectorAll('.' + GRID_VIEW_ROOT_CLASS);\n    for (var i = 0; i < gridViewRoots.length; ++i) {\n      container.removeChild(gridViewRoots[i]);\n    }\n  }\n  function isTargetInElem(target, elem) {\n    if (!target || !targetIsElement(target)) {\n      return false;\n    }\n    var t = target;\n    while (t && !t.classList.contains('grid-container')) {\n      if (t === elem) {\n        return true;\n      }\n      t = t.parentElement;\n    }\n    return false;\n  }\n  grid.eventLoop.bind('grid-destroy', function () {\n    cleanup();\n    if (drawRequestedId) {\n      cancelAnimationFrame(drawRequestedId);\n    }\n    viewLayer.draw = function () {};\n  });\n  return viewLayer;\n}\nexports.create = create;\nexports.default = create;","map":{"version":3,"names":["custom_event_1","require","event_loop_1","util","create","grid","container","root","cellContainerTL","cellContainerTR","cellContainerBL","cellContainerBR","decoratorContainerTL","decoratorContainerTR","decoratorContainerBL","decoratorContainerBR","borderWidth","hoveredFixedRow","hoveredRow","GRID_CELL_CONTAINER_BASE_CLASS","GRID_VIEW_ROOT_CLASS","CELL_CLASS","cells","rows","fixed","nonFixed","builtCols","builtRows","drawRequestedId","viewLayer","build","elem","cleanup","makeCellContainer","style","zIndex","makeDecoratorContainer","overflow","document","createElement","setAttribute","appendChild","draw","undefined","requestAnimationFrame","eventIsOnCells","e","target","targetIsElement","classList","contains","textarea","isAnnotatedEvent","renderedColElement","realCol","renderedRowElement","realRow","view","col","get","isBuiltActionable","isTargetInElem","row","setTextContent","text","firstChild","nodeType","nodeValue","textContent","getBorderWidth","_drawCells","drawCells","_buildCells","buildCells","_buildCols","buildCols","_buildRows","buildRows","_drawDecorators","drawDecorators","_drawCellClasses","drawCellClasses","cellClasses","add","Infinity","rowHeaderClasses","colHeaderClasses","fixedColClasses","fixedRowClasses","eventLoop","bind","left","colModel","numFixed","width","numHeaders","top","rowModel","height","remove","cellContainer","decoratorContainer","position","pointerEvents","offsetContainerForPixelScroll","modTopPixels","pixelScrollModel","offsetTop","modLeftPixels","offsetLeft","fixedHeight","virtualPixelCellModel","fixedWidth","position3D","decorators","getAlive","forEach","decorator","decoratorTopOffset","decoratorLeftOffset","scrollVert","scrollHorz","boundingBox","marginTop","marginLeft","measureBorderWidth","jsGridCell","oldClass","className","computedStyle","getComputedStyle","borderWidthProp","getPropertyValue","parseInt","isNaN","destroyed","opts","snapToCell","fps","slowCount","rebuilt","viewPort","isDirty","builtColsDirty","areBuildersDirty","builtRowsDirty","cellsPositionOrSizeChanged","cellScrollModel","drawingCells","dataModel","drawingDecorators","isOffsetDirty","fire","bWidth","headerRows","headerCols","totalVisibleCellWidth","lastVirtualCol","lastVirtualRow","widths","lefts","virtualCols","positionRow","virtualRow","display","iterateCells","drawCell","r","c","cell","getColWidth","virtualCol","toVirtualCol","getColLeft","toVirtualRow","data","getHeader","toData","builder","hasRowBuilder","includeHeaders","cellChild","builtElem","update","formatted","notSameElem","removeChild","drawRow","getRowHeight","toVirtual","getRowTop","doToAllCellContainers","clearCellContainer","fn","getCellContainer","fixedRow","fixedCol","buildRow","buildDivCell","boxSizing","bottom","destroyRenderedElems","oldElems","oldElem","destroyEvent","default","dispatchEvent","buildDimension","cols","viewCol","viewRow","previousElement","dimension","crossDimension","previouslyBuiltElems","getRenderContext","builtElems","i","rowColModel","length","realI","count","render","converters","virtual","toView","setPosition","positionDecorator","bounding","t","l","h","w","clamp","positionCellDecoratorFromViewCellRange","realCellRange","realPxRange","toPx","createRangeForDescriptor","descriptor","range","space","units","aliveDecorators","hasBeenRendered","decElement","vCol","vRow","intersect","parent_1","parentElement","removeDecorators","popAllDead","renderedElement","parent_2","classes","getCachedClasses","join","destroyPreviouslyBuilt","built","Object","keys","key","concat","gridViewRoots","querySelectorAll","cancelAnimationFrame","exports"],"sources":["C:\\amazon\\amazon\\node_modules\\grid\\src\\modules\\view-layer\\index.ts"],"sourcesContent":["import { IBuilderRenderContext } from '../abstract-row-col-model';\nimport { Grid, IGridDimension } from '../core';\nimport customEvent from '../custom-event';\nimport { IDecorator } from '../decorators';\nimport { EventUnion, isAnnotatedEvent } from '../event-loop';\nimport { RawPositionRange } from '../position-range';\nimport * as util from '../util';\n\ntype IViewLayerDecorator = RawPositionRange & IDecorator & {\n  scrollHorz?: boolean;\n  scrollVert?: boolean;\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n};\n\nexport interface IViewLayer {\n  build(elem: HTMLElement): void;\n  draw(): void;\n  eventIsOnCells(e: EventUnion): boolean;\n  setTextContent(elem: Node | undefined, text: string): void;\n  getBorderWidth(): number;\n  _drawCells(): void;\n  _buildCells(): void;\n  _buildCols(): void;\n  _buildRows(): void;\n  _drawDecorators(b: boolean): void;\n  _drawCellClasses(): void;\n}\n\ninterface IBuiltElementMap {\n  [key: string]: Array<HTMLElement | undefined>;\n}\n\nexport function create(grid: Grid) {\n\n  let container: HTMLElement | undefined;\n  let root: HTMLElement;\n  let cellContainerTL: HTMLElement;\n  let cellContainerTR: HTMLElement;\n  let cellContainerBL: HTMLElement;\n  let cellContainerBR: HTMLElement;\n  let decoratorContainerTL: HTMLElement;\n  let decoratorContainerTR: HTMLElement;\n  let decoratorContainerBL: HTMLElement;\n  let decoratorContainerBR: HTMLElement;\n  let borderWidth: number | undefined;\n  let hoveredFixedRow: HTMLElement | undefined;\n  let hoveredRow: HTMLElement | undefined;\n\n  const GRID_CELL_CONTAINER_BASE_CLASS = 'grid-cells';\n  const GRID_VIEW_ROOT_CLASS = 'js-grid-view-root';\n  const CELL_CLASS = 'grid-cell';\n\n  let cells: HTMLElement[][]; // matrix of rendered cell elements;\n  const rows = {\n    fixed: [] as HTMLElement[],\n    nonFixed: [] as HTMLElement[]\n  }; // array of all rendered rows\n  // map from col index to an array of built elements for the column to update on scroll\n  let builtCols: IBuiltElementMap = {};\n  // map from row index to an array of built elements for the row to update on scroll\n  let builtRows: IBuiltElementMap = {};\n\n  let drawRequestedId: number | undefined;\n\n  const viewLayer: IViewLayer = {\n    build(elem: HTMLElement) {\n      cleanup();\n\n      container = elem;\n\n      cellContainerTL = makeCellContainer();\n      cellContainerTL.style.zIndex = '4';\n      cellContainerTR = makeCellContainer();\n      cellContainerTR.style.zIndex = '3';\n      cellContainerBL = makeCellContainer();\n      cellContainerBL.style.zIndex = '3';\n      cellContainerBR = makeCellContainer();\n      cellContainerBR.style.zIndex = '2';\n\n      decoratorContainerTL = makeDecoratorContainer();\n      decoratorContainerTL.style.zIndex = '4';\n      decoratorContainerTR = makeDecoratorContainer();\n      decoratorContainerTR.style.zIndex = '3';\n      decoratorContainerTR.style.overflow = 'hidden';\n      decoratorContainerBL = makeDecoratorContainer();\n      decoratorContainerBL.style.zIndex = '3';\n      decoratorContainerBL.style.overflow = 'hidden';\n      decoratorContainerBR = makeDecoratorContainer();\n      decoratorContainerBR.style.zIndex = '2';\n\n      root = document.createElement('div');\n      root.setAttribute('class', GRID_VIEW_ROOT_CLASS);\n\n      root.appendChild(cellContainerTL);\n      root.appendChild(cellContainerTR);\n      root.appendChild(cellContainerBL);\n      root.appendChild(cellContainerBR);\n\n      root.appendChild(decoratorContainerTL);\n      root.appendChild(decoratorContainerTR);\n      root.appendChild(decoratorContainerBL);\n      root.appendChild(decoratorContainerBR);\n\n      container.appendChild(root);\n\n    },\n    draw() {\n      if (drawRequestedId === undefined) {\n        drawRequestedId = requestAnimationFrame(draw);\n      }\n    },\n    eventIsOnCells(e: EventUnion): boolean {\n      const target = e.target;\n\n      if (!target) {\n        return false;\n      }\n      if (targetIsElement(target) && target.classList.contains('grid-cell') || target === grid.textarea) {\n        // on an actual grid-cell\n        return true;\n      }\n\n      if (!isAnnotatedEvent(e)) {\n        return false;\n      }\n\n      const renderedColElement = builtCols && builtCols[e.realCol];\n      const renderedRowElement = builtRows && builtRows[e.realRow];\n\n      if (renderedColElement && !grid.view.col.get(e.realCol).isBuiltActionable) {\n        const elem = renderedColElement[e.realRow];\n        return isTargetInElem(target, elem);\n      } else if (renderedRowElement && !grid.view.row.get(e.realRow).isBuiltActionable) {\n        const elem = renderedRowElement[e.realCol];\n        return isTargetInElem(target, elem);\n      }\n\n      return false;\n    },\n    setTextContent(elem: Node | undefined, text: string) {\n      if (!elem) {\n        return;\n      }\n      if (elem.firstChild && elem.firstChild.nodeType === 3) {\n        elem.firstChild.nodeValue = text;\n      } else {\n        elem.textContent = text;\n      }\n    },\n    getBorderWidth,\n    _drawCells: drawCells,\n    _buildCells: buildCells,\n    _buildCols: buildCols,\n    _buildRows: buildRows,\n    _drawDecorators: drawDecorators,\n    _drawCellClasses: drawCellClasses,\n  };\n\n  const targetIsElement = (e: EventTarget): e is Element => !!(e as any).classList;\n\n  // add the cell classes through the standard method\n  grid.cellClasses.add(grid.cellClasses.create(0, 0, CELL_CLASS, Infinity, Infinity, 'virtual'));\n\n  const rowHeaderClasses = grid.cellClasses.create(0, 0, 'grid-header grid-row-header', Infinity, 0, 'virtual');\n  const colHeaderClasses = grid.cellClasses.create(0, 0, 'grid-header grid-col-header', 0, Infinity, 'virtual');\n  const fixedColClasses = grid.cellClasses.create(0, -1, 'grid-last-fixed-col', Infinity, 1, 'virtual');\n  const fixedRowClasses = grid.cellClasses.create(-1, 0, 'grid-last-fixed-row', 1, Infinity, 'virtual');\n\n  grid.cellClasses.add(rowHeaderClasses);\n  grid.cellClasses.add(colHeaderClasses);\n  grid.cellClasses.add(fixedRowClasses);\n  grid.cellClasses.add(fixedColClasses);\n\n  grid.eventLoop.bind('grid-col-change', () => {\n    fixedColClasses.left = grid.colModel.numFixed() - 1;\n    rowHeaderClasses.width = grid.colModel.numHeaders();\n  });\n\n  grid.eventLoop.bind('grid-row-change', () => {\n    fixedRowClasses.top = grid.rowModel.numFixed() - 1;\n    colHeaderClasses.height = grid.rowModel.numHeaders();\n  });\n\n  grid.eventLoop.bind('grid-cell-mouse-move', (e) => {\n    let row = rows.fixed[e.realRow];\n    if (!row || !viewLayer.eventIsOnCells(e)) {\n      return;\n    }\n    row.classList.add('hover');\n    if (hoveredFixedRow && hoveredFixedRow !== row) {\n      hoveredFixedRow.classList.remove('hover');\n    }\n    hoveredFixedRow = row;\n    row = rows.nonFixed[e.realRow];\n    if (row) {\n      row.classList.add('hover');\n    }\n    if (hoveredRow && hoveredRow !== row) {\n      hoveredRow.classList.remove('hover');\n    }\n    hoveredRow = row;\n  });\n\n  function makeCellContainer(): HTMLElement {\n    const cellContainer = document.createElement('div');\n    cellContainer.setAttribute('dts', 'grid-cells');\n    cellContainer.setAttribute('class', GRID_CELL_CONTAINER_BASE_CLASS);\n    cellContainer.style.zIndex = '';\n    // cellContainer.style.pointerEvents = 'none';\n    return cellContainer;\n  }\n\n  function makeDecoratorContainer(): HTMLElement {\n    const decoratorContainer = document.createElement('div');\n    decoratorContainer.setAttribute('dts', 'grid-decorators');\n    util.position(decoratorContainer, 0, 0, 0, 0);\n    decoratorContainer.style.zIndex = '';\n    decoratorContainer.style.pointerEvents = 'none';\n    return decoratorContainer;\n  }\n\n  function offsetContainerForPixelScroll() {\n    const modTopPixels = grid.pixelScrollModel.offsetTop;\n    const modLeftPixels = grid.pixelScrollModel.offsetLeft;\n\n    const fixedHeight = grid.virtualPixelCellModel.fixedHeight();\n    const fixedWidth = grid.virtualPixelCellModel.fixedWidth();\n    util.position(cellContainerTL, 0, 0, undefined, undefined, fixedHeight, fixedWidth);\n    util.position(cellContainerBR, 0, 0, 0, 0);\n    util.position3D(cellContainerBR, modTopPixels, modLeftPixels);\n    util.position(cellContainerTR, 0, 0, undefined, 0, fixedHeight);\n    util.position3D(cellContainerTR, 0, modLeftPixels);\n    util.position(cellContainerBL, 0, 0, 0, undefined, undefined, fixedWidth);\n    util.position3D(cellContainerBL, modTopPixels, 0);\n\n    util.position(decoratorContainerTL, 0, 0, undefined, undefined, fixedHeight, fixedWidth);\n    util.position(decoratorContainerBR, 0, 0, 0, 0);\n    util.position3D(decoratorContainerBR, modTopPixels, modLeftPixels);\n    util.position(decoratorContainerTR, 0, fixedWidth, undefined, 0, undefined, undefined);\n    util.position3D(decoratorContainerTR, 0, 0);\n    util.position(decoratorContainerBL, fixedHeight, 0, 0, undefined, undefined, undefined);\n    util.position3D(decoratorContainerBL, 0, 0);\n    grid.decorators.getAlive().forEach((decorator: IViewLayerDecorator) => {\n      let decoratorTopOffset = 0;\n      let decoratorLeftOffset = 0;\n      if (decorator.scrollVert && !decorator.scrollHorz) {\n        decoratorTopOffset = fixedHeight - modTopPixels;\n      } else if (decorator.scrollHorz && !decorator.scrollVert) {\n        decoratorLeftOffset = fixedWidth - modLeftPixels;\n      }\n\n      if (decorator.fixed) {\n        if (decorator.scrollVert) {\n          decoratorTopOffset += modTopPixels;\n        }\n        if (decorator.scrollHorz) {\n          decoratorLeftOffset += modLeftPixels;\n        }\n      }\n      if (decorator.boundingBox) {\n        decorator.boundingBox.style.marginTop = -1 * decoratorTopOffset + 'px';\n        decorator.boundingBox.style.marginLeft = -1 * decoratorLeftOffset + 'px';\n      }\n\n    });\n  }\n\n  function measureBorderWidth() {\n    // read the border width, for the rare case of larger than 1px borders, otherwise the draw will default to 1\n    if (borderWidth) {\n      return;\n    }\n    const jsGridCell = cells[0] && cells[0][0];\n    if (jsGridCell) {\n      const oldClass = jsGridCell.className;\n      jsGridCell.className = CELL_CLASS;\n      const computedStyle = getComputedStyle(jsGridCell);\n      const borderWidthProp = computedStyle.getPropertyValue('border-left-width');\n      borderWidth = parseInt(borderWidthProp, 10);\n      jsGridCell.className = oldClass;\n    }\n    borderWidth = (!borderWidth || isNaN(borderWidth)) ? undefined : borderWidth;\n    return borderWidth;\n  }\n\n  function draw() {\n    drawRequestedId = undefined;\n    // return if we haven't built yet\n    if (!container || grid.destroyed) {\n      return;\n    }\n\n    if (!grid.opts.snapToCell && grid.fps.slowCount > 10) {\n      grid.opts.snapToCell = true;\n    }\n\n    const rebuilt = grid.viewPort.isDirty();\n    if (rebuilt) {\n      viewLayer._buildCells();\n    }\n\n    const builtColsDirty = grid.colModel.areBuildersDirty();\n    if (rebuilt || builtColsDirty) {\n      viewLayer._buildCols();\n    }\n\n    const builtRowsDirty = grid.rowModel.areBuildersDirty();\n    if (rebuilt || builtRowsDirty) {\n      viewLayer._buildRows();\n    }\n\n    const cellsPositionOrSizeChanged = grid.colModel.isDirty() || grid.rowModel.isDirty() || grid.cellScrollModel.isDirty();\n\n    if (grid.cellClasses.isDirty() || rebuilt || cellsPositionOrSizeChanged) {\n      viewLayer._drawCellClasses();\n    }\n\n    const drawingCells = rebuilt || cellsPositionOrSizeChanged || builtColsDirty || builtRowsDirty || grid.dataModel.isDirty();\n    if (drawingCells) {\n      viewLayer._drawCells();\n    }\n\n    const drawingDecorators = grid.decorators.isDirty() || rebuilt || cellsPositionOrSizeChanged;\n    if (drawingDecorators) {\n      viewLayer._drawDecorators(cellsPositionOrSizeChanged || rebuilt);\n    }\n\n    if (grid.pixelScrollModel.isOffsetDirty() || drawingDecorators) {\n      offsetContainerForPixelScroll();\n    }\n\n    grid.eventLoop.fire('grid-draw');\n  }\n\n  /* CELL LOGIC */\n  function getBorderWidth() {\n    return borderWidth || 1;\n  }\n\n  function drawCells() {\n    measureBorderWidth();\n    const bWidth = getBorderWidth();\n    const headerRows = grid.rowModel.numHeaders();\n    const headerCols = grid.colModel.numHeaders();\n    let totalVisibleCellWidth = 0;\n    let lastVirtualCol: number | undefined;\n    let lastVirtualRow: number | undefined;\n    // these get calculated once per col and are then cached to save a factor of numRows calls per column\n    const widths: number[] = [];\n    const lefts: number[] = [];\n    const virtualCols: number[] = [];\n\n    function positionRow(row: HTMLElement, height: number, top: number, virtualRow: number) {\n      if (!row) {\n        return;\n      }\n      // seeing the same virtual row twice means we've been clamped and it's time to hide the row\n      if (height === 0 || lastVirtualRow === virtualRow) {\n        row.style.display = 'none';\n        return;\n      }\n      row.style.display = '';\n      row.style.height = height + bWidth + 'px';\n      row.style.top = top + 'px';\n    }\n\n    grid.viewPort.iterateCells(function drawCell(r: number, c: number) {\n      const cell = cells[r][c];\n      // only calculate these once per column since they can't change during draw\n      const width = widths[c] || (widths[c] = grid.viewPort.getColWidth(c));\n      const virtualCol = virtualCols[c] || (virtualCols[c] = grid.viewPort.toVirtualCol(c));\n      // if we got the same vCol we've been clamped and its time to hide this cell\n      // also hide the cell if its width is zero cause ya...\n      if (width === 0 || virtualCol === lastVirtualCol) {\n        cell.style.display = 'none';\n        return;\n      }\n      if (r === 0) {\n        // calculate width for rows later but only do it one time (so on the first row)\n        totalVisibleCellWidth += width;\n      }\n\n      lastVirtualCol = virtualCol;\n      cell.style.display = '';\n      cell.style.width = width + bWidth + 'px';\n      // only calculate these once per column since they can't change during draw\n      const left = lefts[c] || (lefts[c] = grid.viewPort.getColLeft(c));\n\n      cell.style.left = left + 'px';\n\n      const virtualRow = grid.viewPort.toVirtualRow(r);\n\n      const data = (r < headerRows || c < headerCols) ?\n        grid.dataModel.getHeader(virtualRow, virtualCol) :\n        grid.dataModel.get(grid.rowModel.toData(virtualRow), grid.colModel.toData(virtualCol));\n\n      // artificially only get builders for row headers for now\n      let builder = grid.rowModel.get(virtualRow).builder;\n      let hasRowBuilder = true;\n      if (!builder || (virtualCol < headerCols && !builder.includeHeaders)) {\n        hasRowBuilder = false;\n        builder = grid.colModel.get(virtualCol).builder;\n        if (builder && virtualRow < headerRows && !builder.includeHeaders) {\n          builder = undefined;\n        }\n      }\n\n      let cellChild;\n      if (builder) {\n        const builtElem = (hasRowBuilder) ?\n          builtRows[virtualRow][c] :\n          builtCols[virtualCol][r];\n\n        cellChild = builder.update(builtElem, {\n          virtualCol,\n          virtualRow,\n          data\n        });\n      }\n\n      // if we didn't get a child from the builder use a regular text node\n      if (!cellChild) {\n        viewLayer.setTextContent(cell, data.formatted);\n      } else {\n        const notSameElem = cell.firstChild !== cellChild;\n        if (cell.firstChild && notSameElem) {\n          cell.removeChild(cell.firstChild);\n        }\n        if (notSameElem) {\n          cell.appendChild(cellChild);\n        }\n\n      }\n    }, function drawRow(r: number) {\n      const height = grid.viewPort.getRowHeight(r);\n      const virtualRow = grid.view.row.toVirtual(r);\n      const top = grid.viewPort.getRowTop(r);\n      positionRow(rows.fixed[r], height, top, virtualRow);\n      positionRow(rows.nonFixed[r], height, top, virtualRow);\n      lastVirtualRow = virtualRow;\n      lastVirtualCol = undefined;\n    });\n\n    rows.nonFixed.forEach((row) => {\n      row.style.width = totalVisibleCellWidth + 'px';\n    });\n    rows.fixed.forEach((row) => {\n      row.style.width = grid.virtualPixelCellModel.fixedWidth() + 'px';\n    });\n\n    if (grid.cellScrollModel.row % 2) {\n      cellContainerBR.className = GRID_CELL_CONTAINER_BASE_CLASS + ' odds';\n      cellContainerBL.className = GRID_CELL_CONTAINER_BASE_CLASS + ' odds';\n    } else {\n      doToAllCellContainers((cellContainer) => {\n        cellContainer.className = GRID_CELL_CONTAINER_BASE_CLASS;\n      });\n\n    }\n  }\n\n  function clearCellContainer(cellContainer: HTMLElement) {\n    while (cellContainer.firstChild) {\n      cellContainer.removeChild(cellContainer.firstChild);\n    }\n  }\n\n  function doToAllCellContainers(fn: (container: HTMLElement) => void) {\n    fn(cellContainerTL);\n    fn(cellContainerTR);\n    fn(cellContainerBL);\n    fn(cellContainerBR);\n  }\n\n  function getCellContainer(r: number, c: number) {\n    const fixedRow = r < grid.rowModel.numFixed();\n    const fixedCol = c < grid.colModel.numFixed();\n    if (fixedRow && fixedCol) {\n      return cellContainerTL;\n    } else if (fixedRow) {\n      return cellContainerTR;\n    } else if (fixedCol) {\n      return cellContainerBL;\n    }\n    return cellContainerBR;\n  }\n\n  function buildRow(r: number) {\n    const row = document.createElement('div');\n    row.setAttribute('class', 'grid-row');\n    row.setAttribute('dts', 'grid-row');\n    row.style.position = 'absolute';\n    row.style.left = '0';\n    if (r < grid.rowModel.numHeaders()) {\n      row.classList.add('grid-is-header');\n    }\n    return row;\n  }\n\n  function buildCells() {\n\n    doToAllCellContainers(clearCellContainer);\n\n    cells = [];\n    rows.fixed = [];\n    rows.nonFixed = [];\n    let row: HTMLElement;\n    grid.viewPort.iterateCells((r, c) => {\n      if (c === 0) {\n        cells[r] = [];\n      }\n      if (c === grid.colModel.numFixed()) {\n        row = rows.nonFixed[r] = buildRow(r);\n      } else if (c === 0) {\n        row = rows.fixed[r] = buildRow(r);\n      }\n      const cell = buildDivCell();\n      cells[r][c] = cell;\n      row.appendChild(cell);\n      getCellContainer(r, c).appendChild(row);\n    });\n  }\n\n  function buildDivCell() {\n    const cell = document.createElement('div');\n    cell.setAttribute('dts', 'grid-cell');\n    const style = cell.style;\n    style.position = 'absolute';\n    style.boxSizing = 'border-box';\n    style.top = '0px';\n    style.bottom = '0px';\n    return cell;\n  }\n\n  /* END CELL LOGIC */\n\n  /* COL BUILDER LOGIC */\n\n  function destroyRenderedElems(oldElems?: Array<HTMLElement | undefined>) {\n    if (!oldElems) {\n      return;\n    }\n    oldElems.forEach((oldElem) => {\n      if (!oldElem) {\n        return;\n      }\n      const destroyEvent = customEvent('grid-rendered-elem-destroy', true);\n      oldElem.dispatchEvent(destroyEvent);\n    });\n  }\n\n  function buildCols() {\n    builtCols = buildDimension(grid.cols, grid.rows, builtCols, (viewCol, viewRow, previousElement) => ({\n      viewRow,\n      viewCol,\n      previousElement\n    }));\n  }\n  /* END COL BUILDER LOGIC */\n\n  /* ROW BUILDER LOGIC\n   *  for now we only build headers\n   * */\n\n  function buildRows() {\n    builtRows = buildDimension(grid.rows, grid.cols, builtRows, (viewRow, viewCol, previousElement) => ({\n      viewRow,\n      viewCol,\n      previousElement\n    }));\n  }\n\n  function buildDimension(\n    dimension: IGridDimension,\n    crossDimension: IGridDimension,\n    previouslyBuiltElems: IBuiltElementMap | undefined,\n    getRenderContext: (dimPos: number, crossDimPos: number, elem: HTMLElement | undefined) => IBuilderRenderContext,\n  ) {\n    const builtElems: IBuiltElementMap = {};\n    for (let i = 0; i < dimension.rowColModel.length(true); i++) {\n      const builder = dimension.rowColModel.get(i).builder;\n      const oldElems = previouslyBuiltElems && previouslyBuiltElems[i];\n\n      if (builder) {\n        builtElems[i] = [];\n        destroyRenderedElems(oldElems);\n        for (let realI = 0; realI < crossDimension.viewPort.count; realI++) {\n          builtElems[i][realI] = builder.render(\n            getRenderContext(dimension.converters.virtual.toView(i), realI, oldElems && oldElems[realI])\n          );\n        }\n      }\n    }\n    return builtElems;\n  }\n  /* END ROW BUILDER LOGIC*/\n\n  /* DECORATOR LOGIC */\n  function setPosition(boundingBox: HTMLElement, top: number, left: number, height: number, width: number): false | void {\n    const style = boundingBox.style;\n    if (height <= 0 || width <= 0) {\n      style.display = 'none';\n      return false;\n    }\n    style.display = '';\n    style.top = top + 'px';\n    style.left = left + 'px';\n    style.height = height + 'px';\n    style.width = width + 'px';\n    style.position = 'absolute';\n  }\n\n  function positionDecorator(bounding: HTMLElement, t: number, l: number, h: number, w: number) {\n    return setPosition(bounding, t, l, util.clamp(h, 0, grid.viewPort.height), util.clamp(w, 0, grid.viewPort.width));\n  }\n\n  function positionCellDecoratorFromViewCellRange(realCellRange: RawPositionRange, boundingBox: HTMLElement) {\n    const realPxRange = grid.viewPort.toPx(realCellRange);\n    return positionDecorator(\n      boundingBox,\n      realPxRange.top,\n      realPxRange.left,\n      realPxRange.height && realPxRange.height + getBorderWidth(),\n      realPxRange.width && realPxRange.width + getBorderWidth()\n    );\n  }\n\n  function createRangeForDescriptor(descriptor: IViewLayerDecorator) {\n    const range = {\n      top: descriptor.top,\n      left: descriptor.left,\n      height: descriptor.height,\n      width: descriptor.width\n    };\n    if (descriptor.space === 'data' && descriptor.units === 'cell') {\n      range.top += grid.rowModel.numHeaders();\n      range.left += grid.colModel.numHeaders();\n    }\n    return range;\n  }\n\n  function drawDecorators(cellsPositionOrSizeChanged: boolean) {\n    const aliveDecorators = grid.decorators.getAlive();\n    aliveDecorators.forEach((decorator: IViewLayerDecorator) => {\n\n      const hasBeenRendered = !!decorator.boundingBox;\n      const boundingBox = decorator.boundingBox || document.createElement('div');\n      if (!hasBeenRendered) {\n        boundingBox.style.pointerEvents = 'none';\n        decorator.boundingBox = boundingBox;\n        const decElement = decorator.render();\n        if (decElement) {\n          boundingBox.appendChild(decElement);\n        }\n      }\n\n      if (decorator.isDirty() || cellsPositionOrSizeChanged || !hasBeenRendered) {\n\n        let vCol = decorator.left;\n        let vRow = decorator.top;\n        if (decorator.space === 'real') {\n          vCol = grid.view.col.toVirtual(vCol);\n          vRow = grid.view.row.toVirtual(vRow);\n          switch (decorator.units) {\n            case 'px':\n              positionDecorator(boundingBox, decorator.top, decorator.left, decorator.height, decorator.width);\n              break;\n            case 'cell':\n              positionCellDecoratorFromViewCellRange(decorator, boundingBox);\n              break;\n          }\n        } else if (decorator.space === 'virtual' || decorator.space === 'data') {\n          if (decorator.space === 'data') {\n            vCol = grid.data.col.toVirtual(vCol);\n            vRow = grid.data.row.toVirtual(vRow);\n          }\n          switch (decorator.units) {\n            case 'px':\n              break;\n            case 'cell':\n            /* jshint -W086 */\n            default:\n              const range = createRangeForDescriptor(decorator);\n              const realCellRange = grid.viewPort.intersect(range);\n              if (realCellRange) {\n                positionCellDecoratorFromViewCellRange(realCellRange, boundingBox);\n              } else {\n                positionDecorator(boundingBox, -1, -1, -1, -1);\n              }\n              break;\n            /* jshint +W086 */\n          }\n        }\n\n        const parent = boundingBox.parentElement;\n        if (parent) {\n          parent.removeChild(boundingBox);\n        }\n        const fixedRow = vRow < grid.rowModel.numFixed();\n        const fixedCol = vCol < grid.colModel.numFixed();\n        if (fixedRow && fixedCol) {\n          decorator.scrollHorz = false;\n          decorator.scrollVert = false;\n          decoratorContainerTL.appendChild(boundingBox);\n        } else if (fixedRow) {\n          decorator.scrollHorz = true;\n          decorator.scrollVert = false;\n          decoratorContainerTR.appendChild(boundingBox);\n        } else if (fixedCol) {\n          decorator.scrollHorz = false;\n          decorator.scrollVert = true;\n          decoratorContainerBL.appendChild(boundingBox);\n        } else {\n          decorator.scrollHorz = true;\n          decorator.scrollVert = true;\n          decoratorContainerBR.appendChild(boundingBox);\n        }\n      }\n    });\n\n    removeDecorators(grid.decorators.popAllDead());\n  }\n\n  function removeDecorators(decorators: IDecorator[]) {\n    decorators.forEach((decorator) => {\n      if (!decorator) {\n        return;\n      }\n      const boundingBox = decorator.boundingBox;\n      if (boundingBox) {\n        // if they rendered an element previously we attached it to the bounding box as the only child\n        const renderedElement = boundingBox.firstChild;\n        if (renderedElement) {\n          // create a destroy dom event that bubbles\n          const destroyEvent = customEvent('decorator-destroy', true);\n          renderedElement.dispatchEvent(destroyEvent);\n        }\n        const parent = boundingBox.parentElement;\n        if (parent) {\n          parent.removeChild(boundingBox);\n        }\n        decorator.boundingBox = undefined;\n      }\n    });\n  }\n\n  /* END DECORATOR LOGIC */\n\n  /* CELL CLASSES LOGIC */\n  function drawCellClasses() {\n    grid.viewPort.iterateCells((r, c) => {\n      const classes = grid.cellClasses.getCachedClasses(grid.view.row.toVirtual(r), grid.view.col.toVirtual(c));\n      cells[r][c].className = classes.join(' ');\n    });\n  }\n\n  /* END CELL CLASSES LOGIC*/\n\n  function destroyPreviouslyBuilt(built: IBuiltElementMap) {\n    if (!built) {\n      return;\n    }\n    Object.keys(built).forEach((key) => {\n      destroyRenderedElems(built[key]);\n    });\n  }\n\n  function cleanup() {\n    removeDecorators(grid.decorators.getAlive().concat(grid.decorators.popAllDead()));\n    destroyPreviouslyBuilt(builtCols);\n    destroyPreviouslyBuilt(builtRows);\n    if (!container) {\n      return;\n    }\n    const gridViewRoots = container.querySelectorAll('.' + GRID_VIEW_ROOT_CLASS);\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < gridViewRoots.length; ++i) {\n      container.removeChild(gridViewRoots[i]);\n    }\n  }\n\n  function isTargetInElem(target: EventTarget | undefined, elem: HTMLElement | undefined) {\n    if (!target || !targetIsElement(target)) {\n      return false;\n    }\n    let t: Element | null = target;\n    while (t && !t.classList.contains('grid-container')) {\n      if (t === elem) {\n        return true;\n      }\n      t = t.parentElement;\n    }\n    return false;\n  }\n\n  grid.eventLoop.bind('grid-destroy', () => {\n    cleanup();\n    if (drawRequestedId) {\n      cancelAnimationFrame(drawRequestedId);\n    }\n    viewLayer.draw = () => { /* noop */ };\n  });\n\n  return viewLayer;\n}\n\nexport default create;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}